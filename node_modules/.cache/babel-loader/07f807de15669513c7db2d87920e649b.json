{"ast":null,"code":"import{arrayContainsArray}from\"./util\";import{getIngredientKeys}from\"./cocktail.utils\";/**\n * Cocktail filtering rules\n *\n * each rule basically needs to return 'true' if the cocktail should\n * be returned. Adding an export here will automatically make it\n * applyable as a filter so long as an equivalent entry exists\n * in the 'filterConfig'.\n *\n */export function nameIncludes(cocktail,_ref){var searchText=_ref.searchText;return cocktail.name.toLowerCase().includes(searchText.toLowerCase());}// cocktail will be returned if the passed-in property is truthy\nexport function mustHaveTruthyProperty(cocktail,_ref2){var property=_ref2.property;return!!cocktail[property.toString()];}// cocktail will be returned if it includes all of the ingredients\n// in the filter - NONE can be missing.\nexport function makeableFrom(cocktail,_ref3){var ingredients=_ref3.ingredients;var cocktailIngredients=getIngredientKeys(cocktail);if(ingredients.length===0)return false;return arrayContainsArray(ingredients,cocktailIngredients);}// cocktail will be returned if it includes all of the\n// ingredients in the filter - SOME can be missing.\nexport function mustInclude(cocktail,_ref4){var ingredients=_ref4.ingredients;var cocktailIngredients=getIngredientKeys(cocktail);if(ingredients.length===0)return true;return arrayContainsArray(cocktailIngredients,ingredients);}// cocktail will be returned if it contains any of the\n// ingredients from the filter.\nexport function canInclude(cocktail,_ref5){var ingredients=_ref5.ingredients;var cocktailIngredients=getIngredientKeys(cocktail);if(ingredients.length===0)return true;return cocktailIngredients.some(function(i){return ingredients.includes(i);});}// cocktail will be returned if it contains NONE of the ingredients\n// from the filter.\nexport function mustNotInclude(cocktail,_ref6){var ingredients=_ref6.ingredients;return!canInclude(cocktail,{ingredients:ingredients});}export function inGlass(cocktail,_ref7){var glasses=_ref7.glasses;return glasses.length===0||glasses.includes(cocktail.glass);}export function inCategory(cocktail,_ref8){var categories=_ref8.categories;return categories.length===0||categories.includes(cocktail.category);}export function isFavourite(cocktail,_ref9){var favourites=_ref9.favourites;return favourites.includes(cocktail.slug);}","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/utilities/filterRules.js"],"names":["arrayContainsArray","getIngredientKeys","nameIncludes","cocktail","searchText","name","toLowerCase","includes","mustHaveTruthyProperty","property","toString","makeableFrom","ingredients","cocktailIngredients","length","mustInclude","canInclude","some","i","mustNotInclude","inGlass","glasses","glass","inCategory","categories","category","isFavourite","favourites","slug"],"mappings":"AAAA,OAASA,kBAAT,KAAmC,QAAnC,CACA,OAASC,iBAAT,KAAkC,kBAAlC,CAEA;;;;;;;;GAUA,MAAO,SAASC,CAAAA,YAAT,CAAsBC,QAAtB,MAAgD,IAAdC,CAAAA,UAAc,MAAdA,UAAc,CACrD,MAAOD,CAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCH,UAAU,CAACE,WAAX,EAArC,CAAP,CACD,CAED;AACA,MAAO,SAASE,CAAAA,sBAAT,CAAgCL,QAAhC,OAAwD,IAAZM,CAAAA,QAAY,OAAZA,QAAY,CAC7D,MAAO,CAAC,CAACN,QAAQ,CAACM,QAAQ,CAACC,QAAT,EAAD,CAAjB,CACD,CAED;AACA;AACA,MAAO,SAASC,CAAAA,YAAT,CAAsBR,QAAtB,OAAiD,IAAfS,CAAAA,WAAe,OAAfA,WAAe,CACtD,GAAMC,CAAAA,mBAAmB,CAAGZ,iBAAiB,CAACE,QAAD,CAA7C,CACA,GAAIS,WAAW,CAACE,MAAZ,GAAuB,CAA3B,CAA8B,MAAO,MAAP,CAC9B,MAAOd,CAAAA,kBAAkB,CAACY,WAAD,CAAcC,mBAAd,CAAzB,CACD,CAED;AACA;AACA,MAAO,SAASE,CAAAA,WAAT,CAAqBZ,QAArB,OAAgD,IAAfS,CAAAA,WAAe,OAAfA,WAAe,CACrD,GAAMC,CAAAA,mBAAmB,CAAGZ,iBAAiB,CAACE,QAAD,CAA7C,CACA,GAAIS,WAAW,CAACE,MAAZ,GAAuB,CAA3B,CAA8B,MAAO,KAAP,CAC9B,MAAOd,CAAAA,kBAAkB,CAACa,mBAAD,CAAsBD,WAAtB,CAAzB,CACD,CAED;AACA;AACA,MAAO,SAASI,CAAAA,UAAT,CAAoBb,QAApB,OAA+C,IAAfS,CAAAA,WAAe,OAAfA,WAAe,CACpD,GAAMC,CAAAA,mBAAmB,CAAGZ,iBAAiB,CAACE,QAAD,CAA7C,CACA,GAAIS,WAAW,CAACE,MAAZ,GAAuB,CAA3B,CAA8B,MAAO,KAAP,CAC9B,MAAOD,CAAAA,mBAAmB,CAACI,IAApB,CAAyB,SAAAC,CAAC,QAAIN,CAAAA,WAAW,CAACL,QAAZ,CAAqBW,CAArB,CAAJ,EAA1B,CAAP,CACD,CAED;AACA;AACA,MAAO,SAASC,CAAAA,cAAT,CAAwBhB,QAAxB,OAAmD,IAAfS,CAAAA,WAAe,OAAfA,WAAe,CACxD,MAAO,CAACI,UAAU,CAACb,QAAD,CAAW,CAAES,WAAW,CAAXA,WAAF,CAAX,CAAlB,CACD,CAED,MAAO,SAASQ,CAAAA,OAAT,CAAiBjB,QAAjB,OAAwC,IAAXkB,CAAAA,OAAW,OAAXA,OAAW,CAC7C,MAAOA,CAAAA,OAAO,CAACP,MAAR,GAAmB,CAAnB,EAAwBO,OAAO,CAACd,QAAR,CAAiBJ,QAAQ,CAACmB,KAA1B,CAA/B,CACD,CAED,MAAO,SAASC,CAAAA,UAAT,CAAoBpB,QAApB,OAA8C,IAAdqB,CAAAA,UAAc,OAAdA,UAAc,CACnD,MAAOA,CAAAA,UAAU,CAACV,MAAX,GAAsB,CAAtB,EAA2BU,UAAU,CAACjB,QAAX,CAAoBJ,QAAQ,CAACsB,QAA7B,CAAlC,CACD,CAED,MAAO,SAASC,CAAAA,WAAT,CAAqBvB,QAArB,OAA+C,IAAdwB,CAAAA,UAAc,OAAdA,UAAc,CACpD,MAAOA,CAAAA,UAAU,CAACpB,QAAX,CAAoBJ,QAAQ,CAACyB,IAA7B,CAAP,CACD","sourcesContent":["import { arrayContainsArray } from \"./util\";\nimport { getIngredientKeys } from \"./cocktail.utils\";\n\n/**\n * Cocktail filtering rules\n *\n * each rule basically needs to return 'true' if the cocktail should\n * be returned. Adding an export here will automatically make it\n * applyable as a filter so long as an equivalent entry exists\n * in the 'filterConfig'.\n *\n */\n\nexport function nameIncludes(cocktail, { searchText }) {\n  return cocktail.name.toLowerCase().includes(searchText.toLowerCase());\n}\n\n// cocktail will be returned if the passed-in property is truthy\nexport function mustHaveTruthyProperty(cocktail, { property }) {\n  return !!cocktail[property.toString()];\n}\n\n// cocktail will be returned if it includes all of the ingredients\n// in the filter - NONE can be missing.\nexport function makeableFrom(cocktail, { ingredients }) {\n  const cocktailIngredients = getIngredientKeys(cocktail);\n  if (ingredients.length === 0) return false;\n  return arrayContainsArray(ingredients, cocktailIngredients);\n}\n\n// cocktail will be returned if it includes all of the\n// ingredients in the filter - SOME can be missing.\nexport function mustInclude(cocktail, { ingredients }) {\n  const cocktailIngredients = getIngredientKeys(cocktail);\n  if (ingredients.length === 0) return true;\n  return arrayContainsArray(cocktailIngredients, ingredients);\n}\n\n// cocktail will be returned if it contains any of the\n// ingredients from the filter.\nexport function canInclude(cocktail, { ingredients }) {\n  const cocktailIngredients = getIngredientKeys(cocktail);\n  if (ingredients.length === 0) return true;\n  return cocktailIngredients.some(i => ingredients.includes(i));\n}\n\n// cocktail will be returned if it contains NONE of the ingredients\n// from the filter.\nexport function mustNotInclude(cocktail, { ingredients }) {\n  return !canInclude(cocktail, { ingredients });\n}\n\nexport function inGlass(cocktail, { glasses }) {\n  return glasses.length === 0 || glasses.includes(cocktail.glass);\n}\n\nexport function inCategory(cocktail, { categories }) {\n  return categories.length === 0 || categories.includes(cocktail.category);\n}\n\nexport function isFavourite(cocktail, { favourites }) {\n  return favourites.includes(cocktail.slug);\n}\n"]},"metadata":{},"sourceType":"module"}