{"ast":null,"code":"import React from\"react\";import{bindActionCreators}from\"redux\";import{connect}from\"react-redux\";import{map}from\"lodash\";import GlassIcon from\"../GlassIcon\";import{DialogContent,FormGroup,FormLabel,FormControl,FormControlLabel,Checkbox}from\"@material-ui/core\";import{allGlassesSelector}from\"../../selectors\";import{updateFilter}from\"../../actions\";import{removeOrAddItemFromArray}from\"../../utilities/util\";var GlassFilter=function GlassFilter(_ref){var glasses=_ref.glasses,allGlasses=_ref.allGlasses,updateFilter=_ref.updateFilter;return/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\"},/*#__PURE__*/React.createElement(FormLabel,{component:\"legend\"},\"Glass\"),/*#__PURE__*/React.createElement(FormGroup,{row:true},map(allGlasses,function(glassDetail,glassKey){return/*#__PURE__*/React.createElement(FormControlLabel,{key:glassKey,control:/*#__PURE__*/React.createElement(Checkbox,{checked:glasses.includes(glassKey),onChange:function onChange(){return updateFilter({glasses:removeOrAddItemFromArray(glassKey,glasses)});},value:\"checkedB\",color:\"primary\"}),label:/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(GlassIcon,{glass:glassKey}),glassDetail.name)});}))));};var mapStateToProps=function mapStateToProps(state){return{glasses:state.filterOptions.glasses,allGlasses:allGlassesSelector(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateFilter:bindActionCreators(updateFilter,dispatch)};};export default connect(mapStateToProps,mapDispatchToProps)(GlassFilter);","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/Filters/GlassFilterDialog.js"],"names":["React","bindActionCreators","connect","map","GlassIcon","DialogContent","FormGroup","FormLabel","FormControl","FormControlLabel","Checkbox","allGlassesSelector","updateFilter","removeOrAddItemFromArray","GlassFilter","glasses","allGlasses","glassDetail","glassKey","includes","name","mapStateToProps","state","filterOptions","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,kBAAT,KAAmC,OAAnC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,GAAT,KAAoB,QAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAEA,OACEC,aADF,CAEEC,SAFF,CAGEC,SAHF,CAIEC,WAJF,CAKEC,gBALF,CAMEC,QANF,KAOO,mBAPP,CASA,OAASC,kBAAT,KAAmC,iBAAnC,CACA,OAASC,YAAT,KAA6B,eAA7B,CACA,OAASC,wBAAT,KAAyC,sBAAzC,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA2C,IAAxCC,CAAAA,OAAwC,MAAxCA,OAAwC,CAA/BC,UAA+B,MAA/BA,UAA+B,CAAnBJ,YAAmB,MAAnBA,YAAmB,CAC7D,mBACE,oBAAC,aAAD,mBACE,oBAAC,WAAD,EAAa,SAAS,CAAC,UAAvB,eACE,oBAAC,SAAD,EAAW,SAAS,CAAC,QAArB,UADF,cAEE,oBAAC,SAAD,EAAW,GAAG,KAAd,EACGT,GAAG,CAACa,UAAD,CAAa,SAACC,WAAD,CAAcC,QAAd,CAA2B,CAC1C,mBACE,oBAAC,gBAAD,EACE,GAAG,CAAEA,QADP,CAEE,OAAO,cACL,oBAAC,QAAD,EACE,OAAO,CAAEH,OAAO,CAACI,QAAR,CAAiBD,QAAjB,CADX,CAEE,QAAQ,CAAE,0BACRN,CAAAA,YAAY,CAAC,CACXG,OAAO,CAAEF,wBAAwB,CAACK,QAAD,CAAWH,OAAX,CADtB,CAAD,CADJ,EAFZ,CAOE,KAAK,CAAC,UAPR,CAQE,KAAK,CAAC,SARR,EAHJ,CAcE,KAAK,cACH,6CACE,oBAAC,SAAD,EAAW,KAAK,CAAEG,QAAlB,EADF,CAEGD,WAAW,CAACG,IAFf,CAfJ,EADF,CAuBD,CAxBG,CADN,CAFF,CADF,CADF,CAkCD,CAnCD,CAqCA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCP,OAAO,CAAEO,KAAK,CAACC,aAAN,CAAoBR,OADG,CAEhCC,UAAU,CAAEL,kBAAkB,CAACW,KAAD,CAFE,CAAL,EAA7B,CAKA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCb,YAAY,CAAEX,kBAAkB,CAACW,YAAD,CAAea,QAAf,CADM,CAAL,EAAnC,CAIA,cAAevB,CAAAA,OAAO,CACpBmB,eADoB,CAEpBG,kBAFoB,CAAP,CAGbV,WAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { map } from \"lodash\";\nimport GlassIcon from \"../GlassIcon\";\n\nimport {\n  DialogContent,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\n\nimport { allGlassesSelector } from \"../../selectors\";\nimport { updateFilter } from \"../../actions\";\nimport { removeOrAddItemFromArray } from \"../../utilities/util\";\n\nconst GlassFilter = ({ glasses, allGlasses, updateFilter }) => {\n  return (\n    <DialogContent>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Glass</FormLabel>\n        <FormGroup row>\n          {map(allGlasses, (glassDetail, glassKey) => {\n            return (\n              <FormControlLabel\n                key={glassKey}\n                control={\n                  <Checkbox\n                    checked={glasses.includes(glassKey)}\n                    onChange={() =>\n                      updateFilter({\n                        glasses: removeOrAddItemFromArray(glassKey, glasses)\n                      })\n                    }\n                    value=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label={\n                  <span>\n                    <GlassIcon glass={glassKey} />\n                    {glassDetail.name}\n                  </span>\n                }\n              />\n            );\n          })}\n        </FormGroup>\n      </FormControl>\n    </DialogContent>\n  );\n};\n\nconst mapStateToProps = state => ({\n  glasses: state.filterOptions.glasses,\n  allGlasses: allGlassesSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: bindActionCreators(updateFilter, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GlassFilter);\n"]},"metadata":{},"sourceType":"module"}