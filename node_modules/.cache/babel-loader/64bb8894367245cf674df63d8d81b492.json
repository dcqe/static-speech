{"ast":null,"code":"var _jsxFileName = \"/home/students/ge47qut/public_html/v2/react-speech/src/components/Filters/CategoryFilterDialog.js\";\nimport React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { DialogContent, FormGroup, FormLabel, FormControl, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { allCategoriesSelector } from \"../../selectors\";\nimport { updateFilter } from \"../../actions\";\nimport { removeOrAddItemFromArray } from \"../../utilities/util\";\n\nconst CategoryFilter = ({\n  categories,\n  allCategories,\n  updateFilter\n}) => {\n  return /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, allCategories.map(category => {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      key: category,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: categories.includes(category),\n        onChange: () => updateFilter({\n          categories: removeOrAddItemFromArray(category, categories)\n        }),\n        value: \"checkedB\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }\n      }),\n      label: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    });\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  categories: state.filterOptions.categories,\n  allCategories: allCategoriesSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: bindActionCreators(updateFilter, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryFilter);","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/Filters/CategoryFilterDialog.js"],"names":["React","bindActionCreators","connect","DialogContent","FormGroup","FormLabel","FormControl","FormControlLabel","Checkbox","allCategoriesSelector","updateFilter","removeOrAddItemFromArray","CategoryFilter","categories","allCategories","map","category","includes","mapStateToProps","state","filterOptions","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,aADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,gBALF,EAMEC,QANF,QAOO,mBAPP;AASA,SAASC,qBAAT,QAAsC,iBAAtC;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,wBAAT,QAAyC,sBAAzC;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,aAAd;AAA6BJ,EAAAA;AAA7B,CAAD,KAAiD;AACtE,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,SAAD;AAAW,IAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,aAAa,CAACC,GAAd,CAAkBC,QAAQ,IAAI;AAC7B,wBACE,oBAAC,gBAAD;AACE,MAAA,GAAG,EAAEA,QADP;AAEE,MAAA,OAAO,eACL,oBAAC,QAAD;AACE,QAAA,OAAO,EAAEH,UAAU,CAACI,QAAX,CAAoBD,QAApB,CADX;AAEE,QAAA,QAAQ,EAAE,MACRN,YAAY,CAAC;AACXG,UAAAA,UAAU,EAAEF,wBAAwB,CAClCK,QADkC,EAElCH,UAFkC;AADzB,SAAD,CAHhB;AAUE,QAAA,KAAK,EAAC,UAVR;AAWE,QAAA,KAAK,EAAC,SAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAiBE,MAAA,KAAK,EAAEG,QAjBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAqBD,GAtBA,CADH,CAFF,CADF,CADF;AAgCD,CAjCD;;AAmCA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCN,EAAAA,UAAU,EAAEM,KAAK,CAACC,aAAN,CAAoBP,UADA;AAEhCC,EAAAA,aAAa,EAAEL,qBAAqB,CAACU,KAAD;AAFJ,CAAL,CAA7B;;AAKA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACtCZ,EAAAA,YAAY,EAAET,kBAAkB,CAACS,YAAD,EAAeY,QAAf;AADM,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CACpBgB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbT,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport {\n  DialogContent,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\n\nimport { allCategoriesSelector } from \"../../selectors\";\nimport { updateFilter } from \"../../actions\";\nimport { removeOrAddItemFromArray } from \"../../utilities/util\";\n\nconst CategoryFilter = ({ categories, allCategories, updateFilter }) => {\n  return (\n    <DialogContent>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Category</FormLabel>\n        <FormGroup row>\n          {allCategories.map(category => {\n            return (\n              <FormControlLabel\n                key={category}\n                control={\n                  <Checkbox\n                    checked={categories.includes(category)}\n                    onChange={() =>\n                      updateFilter({\n                        categories: removeOrAddItemFromArray(\n                          category,\n                          categories\n                        )\n                      })\n                    }\n                    value=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label={category}\n              />\n            );\n          })}\n        </FormGroup>\n      </FormControl>\n    </DialogContent>\n  );\n};\n\nconst mapStateToProps = state => ({\n  categories: state.filterOptions.categories,\n  allCategories: allCategoriesSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: bindActionCreators(updateFilter, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoryFilter);\n"]},"metadata":{},"sourceType":"module"}