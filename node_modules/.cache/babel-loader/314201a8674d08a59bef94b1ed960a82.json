{"ast":null,"code":"var _jsxFileName = \"/home/students/ge47qut/public_html/v2/react-speech/src/components/IngredientPicker.js\";\nimport React, { useState } from \"react\";\nimport { Chip, TextField, InputAdornment } from \"@material-ui/core\";\nimport { removeOrAddItemFromArray } from \"../utilities/util\";\nimport map from \"lodash/map\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst styles = theme => ({\n  chip: {\n    margin: theme.spacing() / 2\n  },\n  searchField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300\n  }\n});\n\nconst IngredientPicker = ({\n  allIngredients,\n  selectedIngredients,\n  onIngredientsChange,\n  classes\n}) => {\n  const [searchTerm, updateSearchTerm] = useState(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-search\",\n    label: \"Filter ingredients\",\n    type: \"search\",\n    className: classes.searchField,\n    margin: \"normal\",\n    onChange: e => updateSearchTerm(e.target.value),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    style: {\n      clear: \"both\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), map(allIngredients, (ingredientDetail, ingredientName) => {\n    if (searchTerm && !ingredientName.toLowerCase().includes(searchTerm.toLowerCase())) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(Chip, {\n      key: ingredientName,\n      color: selectedIngredients.includes(ingredientName) ? \"primary\" : \"default\",\n      onClick: e => {\n        onIngredientsChange(removeOrAddItemFromArray(ingredientName, selectedIngredients));\n      },\n      label: ingredientName,\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nconst mapStateToProps = state => ({\n  allIngredients: state.db.ingredients\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(IngredientPicker));","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/IngredientPicker.js"],"names":["React","useState","Chip","TextField","InputAdornment","removeOrAddItemFromArray","map","withStyles","connect","SearchIcon","styles","theme","chip","margin","spacing","searchField","marginLeft","marginRight","width","IngredientPicker","allIngredients","selectedIngredients","onIngredientsChange","classes","searchTerm","updateSearchTerm","e","target","value","startAdornment","clear","ingredientDetail","ingredientName","toLowerCase","includes","mapStateToProps","state","db","ingredients"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,cAA1B,QAAgD,mBAAhD;AACA,SAASC,wBAAT,QAAyC,mBAAzC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,KAAkB;AADtB,GADiB;AAIvBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CADD;AAEXG,IAAAA,WAAW,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd,CAFF;AAGXI,IAAAA,KAAK,EAAE;AAHI;AAJU,CAAL,CAApB;;AAWA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,cADwB;AAExBC,EAAAA,mBAFwB;AAGxBC,EAAAA,mBAHwB;AAIxBC,EAAAA;AAJwB,CAAD,KAKnB;AACJ,QAAM,CAACC,UAAD,EAAaC,gBAAb,IAAiCxB,QAAQ,CAAC,IAAD,CAA/C;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,KAAK,EAAC,oBAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,SAAS,EAAEsB,OAAO,CAACR,WAJrB;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,QAAQ,EAAEW,CAAC,IAAID,gBAAgB,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CANjC;AAOE,IAAA,UAAU,EAAE;AACVC,MAAAA,cAAc,eACZ,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAFQ,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAgBE;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBGxB,GAAG,CAACc,cAAD,EAAiB,CAACW,gBAAD,EAAmBC,cAAnB,KAAsC;AACzD,QACER,UAAU,IACV,CAACQ,cAAc,CAACC,WAAf,GAA6BC,QAA7B,CAAsCV,UAAU,CAACS,WAAX,EAAtC,CAFH,EAGE;AACA,aAAO,IAAP;AACD;;AACD,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAED,cADP;AAEE,MAAA,KAAK,EACHX,mBAAmB,CAACa,QAApB,CAA6BF,cAA7B,IACI,SADJ,GAEI,SALR;AAOE,MAAA,OAAO,EAAEN,CAAC,IAAI;AACZJ,QAAAA,mBAAmB,CACjBjB,wBAAwB,CAAC2B,cAAD,EAAiBX,mBAAjB,CADP,CAAnB;AAGD,OAXH;AAYE,MAAA,KAAK,EAAEW,cAZT;AAaE,MAAA,SAAS,EAAET,OAAO,CAACX,IAbrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAiBD,GAxBG,CAjBN,CADF;AA6CD,CArDD;;AAuDA,MAAMuB,eAAe,GAAGC,KAAK,KAAK;AAChChB,EAAAA,cAAc,EAAEgB,KAAK,CAACC,EAAN,CAASC;AADO,CAAL,CAA7B;;AAIA,eAAe9B,OAAO,CAAC2B,eAAD,CAAP,CAAyB5B,UAAU,CAACG,MAAD,CAAV,CAAmBS,gBAAnB,CAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Chip, TextField, InputAdornment } from \"@material-ui/core\";\nimport { removeOrAddItemFromArray } from \"../utilities/util\";\nimport map from \"lodash/map\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst styles = theme => ({\n  chip: {\n    margin: theme.spacing() / 2\n  },\n  searchField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300\n  }\n});\n\nconst IngredientPicker = ({\n  allIngredients,\n  selectedIngredients,\n  onIngredientsChange,\n  classes\n}) => {\n  const [searchTerm, updateSearchTerm] = useState(null);\n\n  return (\n    <div>\n      <TextField\n        id=\"standard-search\"\n        label=\"Filter ingredients\"\n        type=\"search\"\n        className={classes.searchField}\n        margin=\"normal\"\n        onChange={e => updateSearchTerm(e.target.value)}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          )\n        }}\n      />\n      <br style={{ clear: \"both\" }} />\n      {map(allIngredients, (ingredientDetail, ingredientName) => {\n        if (\n          searchTerm &&\n          !ingredientName.toLowerCase().includes(searchTerm.toLowerCase())\n        ) {\n          return null;\n        }\n        return (\n          <Chip\n            key={ingredientName}\n            color={\n              selectedIngredients.includes(ingredientName)\n                ? \"primary\"\n                : \"default\"\n            }\n            onClick={e => {\n              onIngredientsChange(\n                removeOrAddItemFromArray(ingredientName, selectedIngredients)\n              );\n            }}\n            label={ingredientName}\n            className={classes.chip}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allIngredients: state.db.ingredients\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(IngredientPicker));\n"]},"metadata":{},"sourceType":"module"}