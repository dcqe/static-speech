{"ast":null,"code":"var _jsxFileName = \"/home/students/ge47qut/public_html/v2/react-speech/src/components/CocktailFilter.js\";\nimport React, { useState, useMemo } from \"react\";\nimport { debounce } from \"lodash\";\nimport { Paper, Button, Menu, MenuItem, TextField, InputAdornment } from \"@material-ui/core\";\nimport { getRules } from \"../filterConfig\";\nimport { removeOrAddItemFromArray } from \"../utilities/util\";\nimport { labelFor } from \"../filterConfig\";\nimport { FilterChips, FilterDialog } from \"./Filters\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { updateFilter, activateFilterDialog } from \"../actions\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { filteredCocktailsSelector } from \"../selectors\";\nimport pluralize from \"pluralize\";\n\nconst styles = theme => ({\n  filters: {\n    padding: theme.spacing(1, 0, 0, 0)\n  },\n  cocktailsCount: {\n    textTransform: \"upperCase\"\n  },\n  filterButton: {\n    float: \"right\",\n    margin: theme.spacing(1)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  },\n  cocktailCountContainer: {\n    padding: theme.spacing(0.5),\n    fontWeight: \"bold\",\n    clear: \"both\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.getContrastText(theme.palette.secondary.light)\n  },\n  searchField: {\n    marginTop: 0,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300\n  }\n});\n\nconst CocktailFilter = ({\n  filteredCocktails,\n  filterOptions: {\n    activeFilters,\n    nameFilter\n  },\n  updateFilter,\n  activateFilterDialog,\n  classes\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const updateNameFilter = useMemo(() => debounce(searchText => {\n    updateFilter({\n      nameFilter: searchText\n    });\n  }, 100), [updateFilter]);\n\n  function openFilterMenu(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function closeFilterMenu() {\n    setAnchorEl(null);\n  }\n\n  function addFilter(filter) {\n    updateFilter({\n      activeFilters: removeOrAddItemFromArray(filter, activeFilters)\n    });\n    activateFilterDialog(filter);\n    closeFilterMenu();\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    square: true,\n    elevation: 24,\n    className: classes.filters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  filterOptions: state.filterOptions,\n  filteredCocktails: filteredCocktailsSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: bindActionCreators(updateFilter, dispatch),\n  activateFilterDialog: bindActionCreators(activateFilterDialog, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CocktailFilter));","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/CocktailFilter.js"],"names":["React","useState","useMemo","debounce","Paper","Button","Menu","MenuItem","TextField","InputAdornment","getRules","removeOrAddItemFromArray","labelFor","FilterChips","FilterDialog","withStyles","bindActionCreators","connect","updateFilter","activateFilterDialog","FilterListIcon","SearchIcon","filteredCocktailsSelector","pluralize","styles","theme","filters","padding","spacing","cocktailsCount","textTransform","filterButton","float","margin","closeButton","position","right","top","color","palette","grey","cocktailCountContainer","fontWeight","clear","textAlign","backgroundColor","secondary","main","getContrastText","light","searchField","marginTop","marginLeft","marginRight","width","CocktailFilter","filteredCocktails","filterOptions","activeFilters","nameFilter","classes","anchorEl","setAnchorEl","updateNameFilter","searchText","openFilterMenu","event","currentTarget","closeFilterMenu","addFilter","filter","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { debounce } from \"lodash\";\nimport {\n  Paper,\n  Button,\n  Menu,\n  MenuItem,\n  TextField,\n  InputAdornment\n} from \"@material-ui/core\";\nimport { getRules } from \"../filterConfig\";\nimport { removeOrAddItemFromArray } from \"../utilities/util\";\nimport { labelFor } from \"../filterConfig\";\nimport { FilterChips, FilterDialog } from \"./Filters\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { updateFilter, activateFilterDialog } from \"../actions\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { filteredCocktailsSelector } from \"../selectors\";\nimport pluralize from \"pluralize\";\nconst styles = theme => ({\n  filters: {\n    padding: theme.spacing(1, 0, 0, 0)\n  },\n  cocktailsCount: {\n    textTransform: \"upperCase\"\n  },\n  filterButton: {\n    float: \"right\",\n    margin: theme.spacing(1)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  },\n  cocktailCountContainer: {\n    padding: theme.spacing(0.5),\n    fontWeight: \"bold\",\n    clear: \"both\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.getContrastText(theme.palette.secondary.light)\n  },\n  searchField: {\n    marginTop: 0,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300\n  }\n});\n\nconst CocktailFilter = ({\n  filteredCocktails,\n  filterOptions: { activeFilters, nameFilter },\n  updateFilter,\n  activateFilterDialog,\n  classes\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const updateNameFilter = useMemo(\n    () =>\n      debounce(searchText => {\n        updateFilter({\n          nameFilter: searchText\n        });\n      }, 100),\n    [updateFilter]\n  );\n\n  function openFilterMenu(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function closeFilterMenu() {\n    setAnchorEl(null);\n  }\n\n  function addFilter(filter) {\n    updateFilter({\n      activeFilters: removeOrAddItemFromArray(filter, activeFilters)\n    });\n    activateFilterDialog(filter);\n    closeFilterMenu();\n  }\n\n  return (\n    <Paper square={true} elevation={24} className={classes.filters}>\n\n    </Paper>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filterOptions: state.filterOptions,\n  filteredCocktails: filteredCocktailsSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: bindActionCreators(updateFilter, dispatch),\n  activateFilterDialog: bindActionCreators(activateFilterDialog, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(CocktailFilter));\n"]},"metadata":{},"sourceType":"module"}