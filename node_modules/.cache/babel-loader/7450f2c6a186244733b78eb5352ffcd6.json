{"ast":null,"code":"import React from\"react\";import{updateFavourites}from\"../actions\";import{connect}from\"react-redux\";import{isFavouriteSelector,allGlassesSelector}from\"../selectors\";import CocktailAvatar from\"./CocktailAvatar\";import{Card,CardHeader,CardContent,CardActions,CardActionArea,Typography}from\"@material-ui/core\";import CocktailActions from\"./CocktailActions\";import GlassIcon from\"./GlassIcon\";import VeganIcon from\"@material-ui/icons/FilterVintage\";import Redo from\"@material-ui/icons/Redo\";import{withStyles}from\"@material-ui/core/styles\";import Ingredient from\"./IngredientDetail\";import{Link}from\"react-router-dom\";import{bindActionCreators}from\"redux\";var styles=function styles(theme){return{ingredientList:{paddingLeft:theme.spacing(2)},card:{width:theme.spacing(40),margin:theme.spacing(1),display:\"flex\",flexDirection:\"column\",justifyContent:\"flex-end\"},cardMain:{flexGrow:10},actions:{alignSelf:\"flex-end\",flexGrow:1},title:{fontSize:20,marginTop:0,marginBottom:0},subHeader:{fontSize:14,fontStyle:\"italic\"},category:{fontSize:12},prep:{fontStyle:\"italic\"}};};var CocktailCard=function CocktailCard(_ref){var cocktail=_ref.cocktail,classes=_ref.classes,allGlasses=_ref.allGlasses,favourite=_ref.favourite,favourites=_ref.favourites,updateFavourites=_ref.updateFavourites;if(!cocktail)return null;return/*#__PURE__*/React.createElement(Card,{className:classes.card},/*#__PURE__*/React.createElement(CardActionArea,{className:classes.cardMain,component:Link,to:\"/cocktails/\".concat(cocktail.slug)},/*#__PURE__*/React.createElement(CardHeader,{title:/*#__PURE__*/React.createElement(\"h1\",{className:classes.title},cocktail.name),avatar:/*#__PURE__*/React.createElement(CocktailAvatar,{cocktail:cocktail}),subheader:/*#__PURE__*/React.createElement(\"span\",{className:classes.subHeader},cocktail.category)}),/*#__PURE__*/React.createElement(CardContent,{className:classes.cardContent},/*#__PURE__*/React.createElement(\"ul\",{className:classes.ingredientList},cocktail.ingredients.map(function(item,idx){return/*#__PURE__*/React.createElement(\"li\",{key:idx},/*#__PURE__*/React.createElement(Typography,null,/*#__PURE__*/React.createElement(Ingredient,{item:item})));})),/*#__PURE__*/React.createElement(\"br\",null),!cocktail.iba&&/*#__PURE__*/React.createElement(Typography,{component:\"p\",color:\"textSecondary\"},\"Non-IBA\"),cocktail.glass&&/*#__PURE__*/React.createElement(Typography,{component:\"p\",color:\"textSecondary\"},/*#__PURE__*/React.createElement(GlassIcon,{glass:cocktail.glass,fontSize:\"inherit\"}),\"\\xA0\",allGlasses[cocktail.glass.toString()].name),cocktail.garnish&&/*#__PURE__*/React.createElement(Typography,{component:\"p\",color:\"textSecondary\"},/*#__PURE__*/React.createElement(Redo,{fontSize:\"inherit\"}),\"\\xA0\",cocktail.garnish),!cocktail.vegan&&/*#__PURE__*/React.createElement(Typography,{component:\"p\",color:\"textSecondary\"},/*#__PURE__*/React.createElement(VeganIcon,{fontSize:\"inherit\"}),\"\\xA0 Non-vegan\"))),/*#__PURE__*/React.createElement(CardActions,{className:classes.actions},/*#__PURE__*/React.createElement(CocktailActions,{cocktail:cocktail})));};var mapStateToProps=function mapStateToProps(state,ownProps){return{favourite:isFavouriteSelector(state,ownProps),favourites:state.favourites,allGlasses:allGlassesSelector(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateFavourites:bindActionCreators(updateFavourites,dispatch)};};export default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(CocktailCard));","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/CocktailCard.js"],"names":["React","updateFavourites","connect","isFavouriteSelector","allGlassesSelector","CocktailAvatar","Card","CardHeader","CardContent","CardActions","CardActionArea","Typography","CocktailActions","GlassIcon","VeganIcon","Redo","withStyles","Ingredient","Link","bindActionCreators","styles","theme","ingredientList","paddingLeft","spacing","card","width","margin","display","flexDirection","justifyContent","cardMain","flexGrow","actions","alignSelf","title","fontSize","marginTop","marginBottom","subHeader","fontStyle","category","prep","CocktailCard","cocktail","classes","allGlasses","favourite","favourites","slug","name","cardContent","ingredients","map","item","idx","iba","glass","toString","garnish","vegan","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { updateFavourites } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { isFavouriteSelector, allGlassesSelector } from \"../selectors\";\nimport CocktailAvatar from \"./CocktailAvatar\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  CardActionArea,\n  Typography\n} from \"@material-ui/core\";\nimport CocktailActions from \"./CocktailActions\";\nimport GlassIcon from \"./GlassIcon\";\nimport VeganIcon from \"@material-ui/icons/FilterVintage\";\n\nimport Redo from \"@material-ui/icons/Redo\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Ingredient from \"./IngredientDetail\";\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\n\nconst styles = theme => ({\n  ingredientList: {\n    paddingLeft: theme.spacing(2)\n  },\n  card: {\n    width: theme.spacing(40),\n    margin: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\"\n  },\n  cardMain: {\n    flexGrow: 10\n  },\n  actions: {\n    alignSelf: \"flex-end\",\n    flexGrow: 1\n  },\n  title: {\n    fontSize: 20,\n    marginTop: 0,\n    marginBottom: 0\n  },\n  subHeader: {\n    fontSize: 14,\n    fontStyle: \"italic\"\n  },\n  category: {\n    fontSize: 12\n  },\n  prep: {\n    fontStyle: \"italic\"\n  }\n});\n\nconst CocktailCard = ({\n  cocktail,\n  classes,\n  allGlasses,\n  favourite,\n  favourites,\n  updateFavourites\n}) => {\n  if (!cocktail) return null;\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea\n        className={classes.cardMain}\n        component={Link}\n        to={`/cocktails/${cocktail.slug}`}\n      >\n        <CardHeader\n          title={<h1 className={classes.title}>{cocktail.name}</h1>}\n          avatar={<CocktailAvatar cocktail={cocktail} />}\n          subheader={\n            <span className={classes.subHeader}>{cocktail.category}</span>\n          }\n        />\n        <CardContent className={classes.cardContent}>\n          <ul className={classes.ingredientList}>\n            {cocktail.ingredients.map((item, idx) => (\n              <li key={idx}>\n                <Typography>\n                  <Ingredient item={item} />\n                </Typography>\n              </li>\n            ))}\n          </ul>\n\n          <br />\n\n          {!cocktail.iba && (\n            <Typography component=\"p\" color=\"textSecondary\">\n              Non-IBA\n            </Typography>\n          )}\n\n          {cocktail.glass && (\n            <Typography component=\"p\" color=\"textSecondary\">\n              <GlassIcon glass={cocktail.glass} fontSize=\"inherit\" />\n              &nbsp;\n              {allGlasses[cocktail.glass.toString()].name}\n            </Typography>\n          )}\n          {cocktail.garnish && (\n            <Typography component=\"p\" color=\"textSecondary\">\n              <Redo fontSize=\"inherit\" />\n              &nbsp;\n              {cocktail.garnish}\n            </Typography>\n          )}\n\n          {!cocktail.vegan && (\n            <Typography component=\"p\" color=\"textSecondary\">\n              <VeganIcon fontSize=\"inherit\" />\n              &nbsp; Non-vegan\n            </Typography>\n          )}\n        </CardContent>\n      </CardActionArea>\n\n      <CardActions className={classes.actions}>\n        <CocktailActions cocktail={cocktail} />\n      </CardActions>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  favourite: isFavouriteSelector(state, ownProps),\n  favourites: state.favourites,\n  allGlasses: allGlassesSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFavourites: bindActionCreators(updateFavourites, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(CocktailCard));\n"]},"metadata":{},"sourceType":"module"}