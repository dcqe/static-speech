{"ast":null,"code":"import _objectSpread from\"/home/students/ge47qut/public_html/v2/react-speech/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import cocktails from\"../data/cocktails.json\";import ingredients from\"../data/ingredients.json\";import glasses from\"../data/glasses.json\";import{isArray}from\"lodash\";export function fetchCocktails(){return Promise.resolve(cocktails.map(function(cocktail){// calculate the slug\nvar slug=cocktail.name.toLowerCase().replace(/ /,\"-\");// calculate if the cocktail is vegan\nvar vegan=!cocktail.ingredients.filter(function(i){return i.ingredient;}).some(function(i){return ingredients[i.ingredient]&&ingredients[i.ingredient].vegan===false;});// force colors to be an array\nvar colors=isArray(cocktail.colors)?cocktail.colors:[cocktail.colors];return _objectSpread(_objectSpread({},cocktail),{},{slug:slug,vegan:vegan,colors:colors});}));}export function fetchIngredients(){return Promise.resolve(ingredients);}export function fetchGlasses(){return Promise.resolve(glasses);}","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/services/cocktail.service.js"],"names":["cocktails","ingredients","glasses","isArray","fetchCocktails","Promise","resolve","map","cocktail","slug","name","toLowerCase","replace","vegan","filter","i","ingredient","some","colors","fetchIngredients","fetchGlasses"],"mappings":"wKAAA,MAAOA,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CAEA,OAASC,OAAT,KAAwB,QAAxB,CAEA,MAAO,SAASC,CAAAA,cAAT,EAA0B,CAC/B,MAAOC,CAAAA,OAAO,CAACC,OAAR,CACLN,SAAS,CAACO,GAAV,CAAc,SAAAC,QAAQ,CAAI,CACxB;AACA,GAAMC,CAAAA,IAAI,CAAGD,QAAQ,CAACE,IAAT,CAAcC,WAAd,GAA4BC,OAA5B,CAAoC,GAApC,CAAyC,GAAzC,CAAb,CAEA;AACA,GAAMC,CAAAA,KAAK,CAAG,CAACL,QAAQ,CAACP,WAAT,CACZa,MADY,CACL,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,UAAN,EADI,EAEZC,IAFY,CAEP,SAASF,CAAT,CAAY,CAChB,MACEd,CAAAA,WAAW,CAACc,CAAC,CAACC,UAAH,CAAX,EACAf,WAAW,CAACc,CAAC,CAACC,UAAH,CAAX,CAA0BH,KAA1B,GAAoC,KAFtC,CAID,CAPY,CAAf,CASA;AACA,GAAMK,CAAAA,MAAM,CAAGf,OAAO,CAACK,QAAQ,CAACU,MAAV,CAAP,CACXV,QAAQ,CAACU,MADE,CAEX,CAACV,QAAQ,CAACU,MAAV,CAFJ,CAIA,sCAAYV,QAAZ,MAAsBC,IAAI,CAAJA,IAAtB,CAA4BI,KAAK,CAALA,KAA5B,CAAmCK,MAAM,CAANA,MAAnC,GACD,CApBD,CADK,CAAP,CAuBD,CAED,MAAO,SAASC,CAAAA,gBAAT,EAA4B,CACjC,MAAOd,CAAAA,OAAO,CAACC,OAAR,CAAgBL,WAAhB,CAAP,CACD,CAED,MAAO,SAASmB,CAAAA,YAAT,EAAwB,CAC7B,MAAOf,CAAAA,OAAO,CAACC,OAAR,CAAgBJ,OAAhB,CAAP,CACD","sourcesContent":["import cocktails from \"../data/cocktails.json\";\nimport ingredients from \"../data/ingredients.json\";\nimport glasses from \"../data/glasses.json\";\n\nimport { isArray } from \"lodash\";\n\nexport function fetchCocktails() {\n  return Promise.resolve(\n    cocktails.map(cocktail => {\n      // calculate the slug\n      const slug = cocktail.name.toLowerCase().replace(/ /, \"-\");\n\n      // calculate if the cocktail is vegan\n      const vegan = !cocktail.ingredients\n        .filter(i => i.ingredient)\n        .some(function(i) {\n          return (\n            ingredients[i.ingredient] &&\n            ingredients[i.ingredient].vegan === false\n          );\n        });\n\n      // force colors to be an array\n      const colors = isArray(cocktail.colors)\n        ? cocktail.colors\n        : [cocktail.colors];\n\n      return { ...cocktail, slug, vegan, colors };\n    })\n  );\n}\n\nexport function fetchIngredients() {\n  return Promise.resolve(ingredients);\n}\n\nexport function fetchGlasses() {\n  return Promise.resolve(glasses);\n}\n"]},"metadata":{},"sourceType":"module"}