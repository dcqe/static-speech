{"ast":null,"code":"import { arrayContainsArray } from \"./util\";\nimport { getIngredientKeys } from \"./cocktail.utils\";\n/**\n * Cocktail filtering rules\n *\n * each rule basically needs to return 'true' if the cocktail should\n * be returned. Adding an export here will automatically make it\n * applyable as a filter so long as an equivalent entry exists\n * in the 'filterConfig'.\n *\n */\n\nexport function nameIncludes(cocktail, {\n  searchText\n}) {\n  return cocktail.name.toLowerCase().includes(searchText.toLowerCase());\n} // cocktail will be returned if the passed-in property is truthy\n\nexport function mustHaveTruthyProperty(cocktail, {\n  property\n}) {\n  return !!cocktail[property.toString()];\n} // cocktail will be returned if it includes all of the ingredients\n// in the filter - NONE can be missing.\n\nexport function makeableFrom(cocktail, {\n  ingredients\n}) {\n  const cocktailIngredients = getIngredientKeys(cocktail);\n  if (ingredients.length === 0) return false;\n  return arrayContainsArray(ingredients, cocktailIngredients);\n} // cocktail will be returned if it includes all of the\n// ingredients in the filter - SOME can be missing.\n\nexport function mustInclude(cocktail, {\n  ingredients\n}) {\n  const cocktailIngredients = getIngredientKeys(cocktail);\n  if (ingredients.length === 0) return true;\n  return arrayContainsArray(cocktailIngredients, ingredients);\n} // cocktail will be returned if it contains any of the\n// ingredients from the filter.\n\nexport function canInclude(cocktail, {\n  ingredients\n}) {\n  const cocktailIngredients = getIngredientKeys(cocktail);\n  if (ingredients.length === 0) return true;\n  return cocktailIngredients.some(i => ingredients.includes(i));\n} // cocktail will be returned if it contains NONE of the ingredients\n// from the filter.\n\nexport function mustNotInclude(cocktail, {\n  ingredients\n}) {\n  return !canInclude(cocktail, {\n    ingredients\n  });\n}\nexport function inGlass(cocktail, {\n  glasses\n}) {\n  return glasses.length === 0 || glasses.includes(cocktail.glass);\n}\nexport function inCategory(cocktail, {\n  categories\n}) {\n  return categories.length === 0 || categories.includes(cocktail.category);\n}\nexport function isFavourite(cocktail, {\n  favourites\n}) {\n  return favourites.includes(cocktail.slug);\n}","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/utilities/filterRules.js"],"names":["arrayContainsArray","getIngredientKeys","nameIncludes","cocktail","searchText","name","toLowerCase","includes","mustHaveTruthyProperty","property","toString","makeableFrom","ingredients","cocktailIngredients","length","mustInclude","canInclude","some","i","mustNotInclude","inGlass","glasses","glass","inCategory","categories","category","isFavourite","favourites","slug"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,QAAnC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA;;;;;;;;;;AAUA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAAgD;AACrD,SAAOD,QAAQ,CAACE,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCH,UAAU,CAACE,WAAX,EAArC,CAAP;AACD,C,CAED;;AACA,OAAO,SAASE,sBAAT,CAAgCL,QAAhC,EAA0C;AAAEM,EAAAA;AAAF,CAA1C,EAAwD;AAC7D,SAAO,CAAC,CAACN,QAAQ,CAACM,QAAQ,CAACC,QAAT,EAAD,CAAjB;AACD,C,CAED;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBR,QAAtB,EAAgC;AAAES,EAAAA;AAAF,CAAhC,EAAiD;AACtD,QAAMC,mBAAmB,GAAGZ,iBAAiB,CAACE,QAAD,CAA7C;AACA,MAAIS,WAAW,CAACE,MAAZ,KAAuB,CAA3B,EAA8B,OAAO,KAAP;AAC9B,SAAOd,kBAAkB,CAACY,WAAD,EAAcC,mBAAd,CAAzB;AACD,C,CAED;AACA;;AACA,OAAO,SAASE,WAAT,CAAqBZ,QAArB,EAA+B;AAAES,EAAAA;AAAF,CAA/B,EAAgD;AACrD,QAAMC,mBAAmB,GAAGZ,iBAAiB,CAACE,QAAD,CAA7C;AACA,MAAIS,WAAW,CAACE,MAAZ,KAAuB,CAA3B,EAA8B,OAAO,IAAP;AAC9B,SAAOd,kBAAkB,CAACa,mBAAD,EAAsBD,WAAtB,CAAzB;AACD,C,CAED;AACA;;AACA,OAAO,SAASI,UAAT,CAAoBb,QAApB,EAA8B;AAAES,EAAAA;AAAF,CAA9B,EAA+C;AACpD,QAAMC,mBAAmB,GAAGZ,iBAAiB,CAACE,QAAD,CAA7C;AACA,MAAIS,WAAW,CAACE,MAAZ,KAAuB,CAA3B,EAA8B,OAAO,IAAP;AAC9B,SAAOD,mBAAmB,CAACI,IAApB,CAAyBC,CAAC,IAAIN,WAAW,CAACL,QAAZ,CAAqBW,CAArB,CAA9B,CAAP;AACD,C,CAED;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBhB,QAAxB,EAAkC;AAAES,EAAAA;AAAF,CAAlC,EAAmD;AACxD,SAAO,CAACI,UAAU,CAACb,QAAD,EAAW;AAAES,IAAAA;AAAF,GAAX,CAAlB;AACD;AAED,OAAO,SAASQ,OAAT,CAAiBjB,QAAjB,EAA2B;AAAEkB,EAAAA;AAAF,CAA3B,EAAwC;AAC7C,SAAOA,OAAO,CAACP,MAAR,KAAmB,CAAnB,IAAwBO,OAAO,CAACd,QAAR,CAAiBJ,QAAQ,CAACmB,KAA1B,CAA/B;AACD;AAED,OAAO,SAASC,UAAT,CAAoBpB,QAApB,EAA8B;AAAEqB,EAAAA;AAAF,CAA9B,EAA8C;AACnD,SAAOA,UAAU,CAACV,MAAX,KAAsB,CAAtB,IAA2BU,UAAU,CAACjB,QAAX,CAAoBJ,QAAQ,CAACsB,QAA7B,CAAlC;AACD;AAED,OAAO,SAASC,WAAT,CAAqBvB,QAArB,EAA+B;AAAEwB,EAAAA;AAAF,CAA/B,EAA+C;AACpD,SAAOA,UAAU,CAACpB,QAAX,CAAoBJ,QAAQ,CAACyB,IAA7B,CAAP;AACD","sourcesContent":["import { arrayContainsArray } from \"./util\";\nimport { getIngredientKeys } from \"./cocktail.utils\";\n\n/**\n * Cocktail filtering rules\n *\n * each rule basically needs to return 'true' if the cocktail should\n * be returned. Adding an export here will automatically make it\n * applyable as a filter so long as an equivalent entry exists\n * in the 'filterConfig'.\n *\n */\n\nexport function nameIncludes(cocktail, { searchText }) {\n  return cocktail.name.toLowerCase().includes(searchText.toLowerCase());\n}\n\n// cocktail will be returned if the passed-in property is truthy\nexport function mustHaveTruthyProperty(cocktail, { property }) {\n  return !!cocktail[property.toString()];\n}\n\n// cocktail will be returned if it includes all of the ingredients\n// in the filter - NONE can be missing.\nexport function makeableFrom(cocktail, { ingredients }) {\n  const cocktailIngredients = getIngredientKeys(cocktail);\n  if (ingredients.length === 0) return false;\n  return arrayContainsArray(ingredients, cocktailIngredients);\n}\n\n// cocktail will be returned if it includes all of the\n// ingredients in the filter - SOME can be missing.\nexport function mustInclude(cocktail, { ingredients }) {\n  const cocktailIngredients = getIngredientKeys(cocktail);\n  if (ingredients.length === 0) return true;\n  return arrayContainsArray(cocktailIngredients, ingredients);\n}\n\n// cocktail will be returned if it contains any of the\n// ingredients from the filter.\nexport function canInclude(cocktail, { ingredients }) {\n  const cocktailIngredients = getIngredientKeys(cocktail);\n  if (ingredients.length === 0) return true;\n  return cocktailIngredients.some(i => ingredients.includes(i));\n}\n\n// cocktail will be returned if it contains NONE of the ingredients\n// from the filter.\nexport function mustNotInclude(cocktail, { ingredients }) {\n  return !canInclude(cocktail, { ingredients });\n}\n\nexport function inGlass(cocktail, { glasses }) {\n  return glasses.length === 0 || glasses.includes(cocktail.glass);\n}\n\nexport function inCategory(cocktail, { categories }) {\n  return categories.length === 0 || categories.includes(cocktail.category);\n}\n\nexport function isFavourite(cocktail, { favourites }) {\n  return favourites.includes(cocktail.slug);\n}\n"]},"metadata":{},"sourceType":"module"}