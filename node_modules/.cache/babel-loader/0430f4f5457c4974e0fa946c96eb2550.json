{"ast":null,"code":"import _regeneratorRuntime from\"/home/students/ge47qut/public_html/v2/react-speech/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/students/ge47qut/public_html/v2/react-speech/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import compact from\"lodash/compact\";import trim from\"lodash/trim\";export function fetchCocktailEnrichment(_x){return _fetchCocktailEnrichment.apply(this,arguments);}function _fetchCocktailEnrichment(){_fetchCocktailEnrichment=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(cocktail){var cocktailName,response,_yield$response$json,drinks,mainDrink,variants;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:cocktailName=cocktail.name;_context.next=3;return fetch(\"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\".concat(cocktail.searchTerm||cocktailName));case 3:response=_context.sent;_context.next=6;return response.json();case 6:_yield$response$json=_context.sent;drinks=_yield$response$json.drinks;if(drinks){_context.next=10;break;}return _context.abrupt(\"return\",{});case 10:mainDrink=drinks.find(function(d){return d.strDrink.toLowerCase()===cocktailName.toLowerCase();})||drinks[0];variants=drinks.filter(function(d){return d.strDrink.toLowerCase()!==cocktailName.toLowerCase();}).map(function(d){var ingredients=[];for(var i=1;i<16;i++){var name=d[\"strIngredient\".concat(i)]||\"\";var measure=d[\"strMeasure\".concat(i)]||\"\";ingredients.push(trim(measure+name));}return{name:\"\".concat(d.strDrink),image:d.strDrinkThumb,category:d.strDrinkCategory,glass:d.strDrinkGlass,preparation:d.strInstructions,ingredients:compact(ingredients)};});return _context.abrupt(\"return\",{image:mainDrink.strDrinkThumb,ibaCategory:mainDrink.strIBA,variants:variants});case 13:case\"end\":return _context.stop();}}},_callee);}));return _fetchCocktailEnrichment.apply(this,arguments);}","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/services/cocktailDBAPI.service.js"],"names":["compact","trim","fetchCocktailEnrichment","cocktail","cocktailName","name","fetch","searchTerm","response","json","drinks","mainDrink","find","d","strDrink","toLowerCase","variants","filter","map","ingredients","i","measure","push","image","strDrinkThumb","category","strDrinkCategory","glass","strDrinkGlass","preparation","strInstructions","ibaCategory","strIBA"],"mappings":"+UAAA,MAAOA,CAAAA,OAAP,KAAoB,gBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CAEA,eAAsBC,CAAAA,uBAAtB,4D,qHAAO,iBAAuCC,QAAvC,2LACCC,YADD,CACgBD,QAAQ,CAACE,IADzB,uBAGkBC,CAAAA,KAAK,oEACkCH,QAAQ,CAACI,UAAT,EAC1DH,YAFwB,EAHvB,QAGCI,QAHD,qCAOoBA,CAAAA,QAAQ,CAACC,IAAT,EAPpB,2CAOGC,MAPH,sBAOGA,MAPH,IASAA,MATA,0DASe,EATf,UAWCC,SAXD,CAYHD,MAAM,CAACE,IAAP,CAAY,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,QAAF,CAAWC,WAAX,KAA6BX,YAAY,CAACW,WAAb,EAAjC,EAAb,GACAL,MAAM,CAAC,CAAD,CAbH,CAeCM,QAfD,CAeYN,MAAM,CACpBO,MADc,CACP,SAAAJ,CAAC,QAAIA,CAAAA,CAAC,CAACC,QAAF,CAAWC,WAAX,KAA6BX,YAAY,CAACW,WAAb,EAAjC,EADM,EAEdG,GAFc,CAEV,SAAAL,CAAC,CAAI,CACR,GAAMM,CAAAA,WAAW,CAAG,EAApB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,EAApB,CAAwBA,CAAC,EAAzB,CAA6B,CAC3B,GAAMf,CAAAA,IAAI,CAAGQ,CAAC,wBAAiBO,CAAjB,EAAD,EAA0B,EAAvC,CACA,GAAMC,CAAAA,OAAO,CAAGR,CAAC,qBAAcO,CAAd,EAAD,EAAuB,EAAvC,CACAD,WAAW,CAACG,IAAZ,CAAiBrB,IAAI,CAACoB,OAAO,CAAGhB,IAAX,CAArB,EACD,CACD,MAAO,CACLA,IAAI,WAAKQ,CAAC,CAACC,QAAP,CADC,CAELS,KAAK,CAAEV,CAAC,CAACW,aAFJ,CAGLC,QAAQ,CAAEZ,CAAC,CAACa,gBAHP,CAILC,KAAK,CAAEd,CAAC,CAACe,aAJJ,CAKLC,WAAW,CAAEhB,CAAC,CAACiB,eALV,CAMLX,WAAW,CAAEnB,OAAO,CAACmB,WAAD,CANf,CAAP,CAQD,CAjBc,CAfZ,iCAkCE,CACLI,KAAK,CAAEZ,SAAS,CAACa,aADZ,CAELO,WAAW,CAAEpB,SAAS,CAACqB,MAFlB,CAGLhB,QAAQ,CAARA,QAHK,CAlCF,yD","sourcesContent":["import compact from \"lodash/compact\";\nimport trim from \"lodash/trim\";\n\nexport async function fetchCocktailEnrichment(cocktail) {\n  const cocktailName = cocktail.name;\n\n  const response = await fetch(\n    `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${cocktail.searchTerm ||\n      cocktailName}`\n  );\n  const { drinks } = await response.json();\n\n  if (!drinks) return {};\n\n  const mainDrink =\n    drinks.find(d => d.strDrink.toLowerCase() === cocktailName.toLowerCase()) ||\n    drinks[0];\n\n  const variants = drinks\n    .filter(d => d.strDrink.toLowerCase() !== cocktailName.toLowerCase())\n    .map(d => {\n      const ingredients = [];\n      for (let i = 1; i < 16; i++) {\n        const name = d[`strIngredient${i}`] || \"\";\n        const measure = d[`strMeasure${i}`] || \"\";\n        ingredients.push(trim(measure + name));\n      }\n      return {\n        name: `${d.strDrink}`,\n        image: d.strDrinkThumb,\n        category: d.strDrinkCategory,\n        glass: d.strDrinkGlass,\n        preparation: d.strInstructions,\n        ingredients: compact(ingredients)\n      };\n    });\n\n  return {\n    image: mainDrink.strDrinkThumb,\n    ibaCategory: mainDrink.strIBA,\n    variants\n  };\n}\n"]},"metadata":{},"sourceType":"module"}