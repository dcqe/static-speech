{"ast":null,"code":"var _jsxFileName = \"/home/students/ge47qut/public_html/v2/react-speech/src/components/IngredientDetail.js\";\nimport React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport compact from \"lodash/compact\";\nimport { createMeasurementString } from \"../utilities/cocktail.utils\";\nconst styles = {\n  tooltip: {\n    cursor: \"pointer\"\n  }\n};\n\nconst IngredientDetail = ({\n  item,\n  units,\n  useLingo,\n  allIngredients,\n  classes\n}) => {\n  if (item.special) return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 28\n    }\n  }, item.special);\n  const {\n    taste,\n    abv,\n    vegan\n  } = allIngredients[item.ingredient] || {};\n  const toolTipContent = [];\n  toolTipContent.push(abv > 0 ? abv + \"% abv\" : \"Non-alcoholic\");\n  toolTipContent.push(vegan === false ? \"Non-Vegan\" : \"\");\n  toolTipContent.push(taste);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, item.unit === \"cl\" ? createMeasurementString(item.amount, units, useLingo) : item.amount, \" \", /*#__PURE__*/React.createElement(Tooltip, {\n    className: classes.tooltip,\n    title: compact(toolTipContent).join(\", \"),\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, item.label || item.ingredient)));\n};\n\nconst mapStateToProps = state => ({\n  allIngredients: state.db.ingredients,\n  units: state.settings.units,\n  useLingo: state.settings.lingo\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(IngredientDetail));","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/IngredientDetail.js"],"names":["React","Tooltip","connect","withStyles","compact","createMeasurementString","styles","tooltip","cursor","IngredientDetail","item","units","useLingo","allIngredients","classes","special","taste","abv","vegan","ingredient","toolTipContent","push","unit","amount","join","label","mapStateToProps","state","db","ingredients","settings","lingo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,uBAAT,QAAwC,6BAAxC;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD;AADI,CAAf;;AAMA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,IADwB;AAExBC,EAAAA,KAFwB;AAGxBC,EAAAA,QAHwB;AAIxBC,EAAAA,cAJwB;AAKxBC,EAAAA;AALwB,CAAD,KAMnB;AACJ,MAAIJ,IAAI,CAACK,OAAT,EAAkB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,IAAI,CAACK,OAAZ,CAAP;AAElB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcC,IAAAA;AAAd,MAAwBL,cAAc,CAACH,IAAI,CAACS,UAAN,CAAd,IAAmC,EAAjE;AAEA,QAAMC,cAAc,GAAG,EAAvB;AACAA,EAAAA,cAAc,CAACC,IAAf,CAAoBJ,GAAG,GAAG,CAAN,GAAUA,GAAG,GAAG,OAAhB,GAA0B,eAA9C;AACAG,EAAAA,cAAc,CAACC,IAAf,CAAoBH,KAAK,KAAK,KAAV,GAAkB,WAAlB,GAAgC,EAApD;AACAE,EAAAA,cAAc,CAACC,IAAf,CAAoBL,KAApB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACY,IAAL,KAAc,IAAd,GACGjB,uBAAuB,CAACK,IAAI,CAACa,MAAN,EAAcZ,KAAd,EAAqBC,QAArB,CAD1B,GAEGF,IAAI,CAACa,MAHX,EAGmB,GAHnB,eAIE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAET,OAAO,CAACP,OADrB;AAEE,IAAA,KAAK,EAAEH,OAAO,CAACgB,cAAD,CAAP,CAAwBI,IAAxB,CAA6B,IAA7B,CAFT;AAGE,IAAA,SAAS,EAAC,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASd,IAAI,CAACe,KAAL,IAAcf,IAAI,CAACS,UAA5B,CALF,CAJF,CADF;AAcD,CA9BD;;AAgCA,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,cAAc,EAAEc,KAAK,CAACC,EAAN,CAASC,WADO;AAEhClB,EAAAA,KAAK,EAAEgB,KAAK,CAACG,QAAN,CAAenB,KAFU;AAGhCC,EAAAA,QAAQ,EAAEe,KAAK,CAACG,QAAN,CAAeC;AAHO,CAAL,CAA7B;;AAMA,eAAe5B,UAAU,CAACG,MAAD,CAAV,CAAmBJ,OAAO,CAACwB,eAAD,CAAP,CAAyBjB,gBAAzB,CAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport compact from \"lodash/compact\";\nimport { createMeasurementString } from \"../utilities/cocktail.utils\";\nconst styles = {\n  tooltip: {\n    cursor: \"pointer\"\n  }\n};\n\nconst IngredientDetail = ({\n  item,\n  units,\n  useLingo,\n  allIngredients,\n  classes\n}) => {\n  if (item.special) return <span>{item.special}</span>;\n\n  const { taste, abv, vegan } = allIngredients[item.ingredient] || {};\n\n  const toolTipContent = [];\n  toolTipContent.push(abv > 0 ? abv + \"% abv\" : \"Non-alcoholic\");\n  toolTipContent.push(vegan === false ? \"Non-Vegan\" : \"\");\n  toolTipContent.push(taste);\n\n  return (\n    <span>\n      {item.unit === \"cl\"\n        ? createMeasurementString(item.amount, units, useLingo)\n        : item.amount}{\" \"}\n      <Tooltip\n        className={classes.tooltip}\n        title={compact(toolTipContent).join(\", \")}\n        placement=\"top\"\n      >\n        <strong>{item.label || item.ingredient}</strong>\n      </Tooltip>\n    </span>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allIngredients: state.db.ingredients,\n  units: state.settings.units,\n  useLingo: state.settings.lingo\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(IngredientDetail));\n"]},"metadata":{},"sourceType":"module"}