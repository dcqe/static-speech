{"ast":null,"code":"var _jsxFileName = \"/home/students/ge47qut/public_html/v2/react-speech/src/components/Settings.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography, Paper, Radio, RadioGroup, FormControlLabel, FormLabel, Switch } from \"@material-ui/core\";\nimport { bindActionCreators } from \"redux\";\nimport { updateSettings, togglePride, toggleLingo } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { colors } from \"../theme\";\nimport capitalize from \"lodash/capitalize\";\nimport keys from \"lodash/keys\";\n\nconst styles = theme => ({\n  content: {\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1, 2)\n  },\n  root: { ...theme.mixins.gutters,\n    justifyContent: \"center\"\n  },\n  formLabel: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nconst Settings = ({\n  classes,\n  settings,\n  updateSettings,\n  togglePride,\n  toggleLingo\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.root,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Paper, {\n  className: classes.content,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Typography, {\n  variant: \"h2\",\n  gutterBottom: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n}, \"Settings\"), /*#__PURE__*/React.createElement(FormLabel, {\n  className: classes.formLabel,\n  component: \"legend\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }\n}, \"Color\"), /*#__PURE__*/React.createElement(RadioGroup, {\n  row: true,\n  \"aria-label\": \"Color\",\n  name: \"color\",\n  value: settings.color,\n  onChange: event => {\n    updateSettings({\n      color: event.target.value\n    });\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }\n}, keys(colors).map(color => {\n  return /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: color,\n    key: color,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 24\n      }\n    }),\n    label: capitalize(color),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  });\n})), /*#__PURE__*/React.createElement(FormLabel, {\n  className: classes.formLabel,\n  component: \"legend\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }\n}, \"Browser mode\"), /*#__PURE__*/React.createElement(RadioGroup, {\n  row: true,\n  \"aria-label\": \"BrowserMode\",\n  name: \"browserMode\",\n  value: settings.browserMode,\n  onChange: event => {\n    updateSettings({\n      browserMode: event.target.value\n    });\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }\n}, [\"card\", \"table\"].map(browserMode => {\n  return /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: browserMode,\n    key: browserMode,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 24\n      }\n    }),\n    label: capitalize(browserMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  });\n})), /*#__PURE__*/React.createElement(FormLabel, {\n  className: classes.formLabel,\n  component: \"legend\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }\n}, \"Theme\"), /*#__PURE__*/React.createElement(RadioGroup, {\n  row: true,\n  \"aria-label\": \"Theme\",\n  name: \"theme\",\n  value: settings.theme,\n  onChange: event => {\n    updateSettings({\n      theme: event.target.value\n    });\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }\n}, [\"light\", \"dark\"].map(theme => {\n  return /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: theme,\n    key: theme,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 24\n      }\n    }),\n    label: capitalize(theme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  });\n})), /*#__PURE__*/React.createElement(FormLabel, {\n  className: classes.formLabel,\n  component: \"legend\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 7\n  }\n}, \"Units\"), /*#__PURE__*/React.createElement(RadioGroup, {\n  row: true,\n  \"aria-label\": \"Units\",\n  name: \"units\",\n  value: settings.units,\n  onChange: event => {\n    updateSettings({\n      units: event.target.value\n    });\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 7\n  }\n}, [\"cl\", \"ml\", \"oz\", \"parts\"].map(unit => {\n  return /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: unit,\n    key: unit,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 24\n      }\n    }),\n    label: unit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  });\n})), /*#__PURE__*/React.createElement(FormLabel, {\n  className: classes.formLabel,\n  component: \"legend\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 7\n  }\n}, \"Pro-mode\"), /*#__PURE__*/React.createElement(FormControlLabel, {\n  control: /*#__PURE__*/React.createElement(Switch, {\n    checked: settings.lingo,\n    onChange: e => {\n      toggleLingo();\n    },\n    value: settings.lingo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }),\n  label: /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 16\n    }\n  }, \"Use Bartender Lingo\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(FormLabel, {\n  className: classes.formLabel,\n  component: \"legend\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 7\n  }\n}, \"Pride!\"), /*#__PURE__*/React.createElement(FormControlLabel, {\n  control: /*#__PURE__*/React.createElement(Switch, {\n    checked: settings.pride,\n    onChange: e => {\n      togglePride();\n    },\n    value: settings.pride,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }),\n  label: /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 16\n    }\n  }, \"Fly the colours\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 7\n  }\n})));\n\nconst mapStateToProps = state => ({\n  settings: state.settings\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSettings: bindActionCreators(updateSettings, dispatch),\n  togglePride: bindActionCreators(togglePride, dispatch),\n  toggleLingo: bindActionCreators(toggleLingo, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Settings));","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/Settings.js"],"names":["React","withStyles","Typography","Paper","Radio","RadioGroup","FormControlLabel","FormLabel","Switch","bindActionCreators","updateSettings","togglePride","toggleLingo","connect","colors","capitalize","keys","styles","theme","content","marginBottom","spacing","padding","root","mixins","gutters","justifyContent","formLabel","marginTop","Settings","classes","settings","color","event","target","value","map","browserMode","units","unit","lingo","e","pride","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SACEC,UADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,gBALF,EAMEC,SANF,EAOEC,MAPF,QAQO,mBARP;AAUA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,WAAtC,QAAyD,YAAzD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADP;AAEPC,IAAAA,OAAO,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAFF,GADc;AAKvBE,EAAAA,IAAI,EAAE,EACJ,GAAGL,KAAK,CAACM,MAAN,CAAaC,OADZ;AAEJC,IAAAA,cAAc,EAAE;AAFZ,GALiB;AASvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAEV,KAAK,CAACG,OAAN,CAAc,CAAd;AADF;AATY,CAAL,CAApB;;AAcA,MAAMQ,QAAQ,GAAG,CAAC;AAChBC,EAAAA,OADgB;AAEhBC,EAAAA,QAFgB;AAGhBrB,EAAAA,cAHgB;AAIhBC,EAAAA,WAJgB;AAKhBC,EAAAA;AALgB,CAAD,kBAOf;AAAK,EAAA,SAAS,EAAEkB,OAAO,CAACP,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD;AAAO,EAAA,SAAS,EAAEO,OAAO,CAACX,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AAAY,EAAA,OAAO,EAAC,IAApB;AAAyB,EAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAEW,OAAO,CAACH,SAA9B;AAAyC,EAAA,SAAS,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,eAQE,oBAAC,UAAD;AACE,EAAA,GAAG,MADL;AAEE,gBAAW,OAFb;AAGE,EAAA,IAAI,EAAC,OAHP;AAIE,EAAA,KAAK,EAAEI,QAAQ,CAACC,KAJlB;AAKE,EAAA,QAAQ,EAAEC,KAAK,IAAI;AACjBvB,IAAAA,cAAc,CAAC;AAAEsB,MAAAA,KAAK,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAAtB,KAAD,CAAd;AACD,GAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASGnB,IAAI,CAACF,MAAD,CAAJ,CAAasB,GAAb,CAAiBJ,KAAK,IAAI;AACzB,sBACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,GAAG,EAAEA,KAFP;AAGE,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX;AAIE,IAAA,KAAK,EAAEjB,UAAU,CAACiB,KAAD,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CATA,CATH,CARF,eA6BE,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAEF,OAAO,CAACH,SAA9B;AAAyC,EAAA,SAAS,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF,eAgCE,oBAAC,UAAD;AACE,EAAA,GAAG,MADL;AAEE,gBAAW,aAFb;AAGE,EAAA,IAAI,EAAC,aAHP;AAIE,EAAA,KAAK,EAAEI,QAAQ,CAACM,WAJlB;AAKE,EAAA,QAAQ,EAAEJ,KAAK,IAAI;AACjBvB,IAAAA,cAAc,CAAC;AAAE2B,MAAAA,WAAW,EAAEJ,KAAK,CAACC,MAAN,CAAaC;AAA5B,KAAD,CAAd;AACD,GAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASG,CAAC,MAAD,EAAS,OAAT,EAAkBC,GAAlB,CAAsBC,WAAW,IAAI;AACpC,sBACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEA,WADT;AAEE,IAAA,GAAG,EAAEA,WAFP;AAGE,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX;AAIE,IAAA,KAAK,EAAEtB,UAAU,CAACsB,WAAD,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CATA,CATH,CAhCF,eAqDE,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAEP,OAAO,CAACH,SAA9B;AAAyC,EAAA,SAAS,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WArDF,eAwDE,oBAAC,UAAD;AACE,EAAA,GAAG,MADL;AAEE,gBAAW,OAFb;AAGE,EAAA,IAAI,EAAC,OAHP;AAIE,EAAA,KAAK,EAAEI,QAAQ,CAACb,KAJlB;AAKE,EAAA,QAAQ,EAAEe,KAAK,IAAI;AACjBvB,IAAAA,cAAc,CAAC;AAAEQ,MAAAA,KAAK,EAAEe,KAAK,CAACC,MAAN,CAAaC;AAAtB,KAAD,CAAd;AACD,GAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASG,CAAC,OAAD,EAAU,MAAV,EAAkBC,GAAlB,CAAsBlB,KAAK,IAAI;AAC9B,sBACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,GAAG,EAAEA,KAFP;AAGE,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX;AAIE,IAAA,KAAK,EAAEH,UAAU,CAACG,KAAD,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CATA,CATH,CAxDF,eA6EE,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAEY,OAAO,CAACH,SAA9B;AAAyC,EAAA,SAAS,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA7EF,eAgFE,oBAAC,UAAD;AACE,EAAA,GAAG,MADL;AAEE,gBAAW,OAFb;AAGE,EAAA,IAAI,EAAC,OAHP;AAIE,EAAA,KAAK,EAAEI,QAAQ,CAACO,KAJlB;AAKE,EAAA,QAAQ,EAAEL,KAAK,IAAI;AACjBvB,IAAAA,cAAc,CAAC;AAAE4B,MAAAA,KAAK,EAAEL,KAAK,CAACC,MAAN,CAAaC;AAAtB,KAAD,CAAd;AACD,GAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,OAAnB,EAA4BC,GAA5B,CAAgCG,IAAI,IAAI;AACvC,sBACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEA,IADT;AAEE,IAAA,GAAG,EAAEA,IAFP;AAGE,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX;AAIE,IAAA,KAAK,EAAEA,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CATA,CATH,CAhFF,eAqGE,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAET,OAAO,CAACH,SAA9B;AAAyC,EAAA,SAAS,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArGF,eAwGE,oBAAC,gBAAD;AACE,EAAA,OAAO,eACL,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEI,QAAQ,CAACS,KADpB;AAEE,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACb7B,MAAAA,WAAW;AACZ,KAJH;AAKE,IAAA,KAAK,EAAEmB,QAAQ,CAACS,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAUE,EAAA,KAAK,eAAE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAxGF,eAqHE,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAEV,OAAO,CAACH,SAA9B;AAAyC,EAAA,SAAS,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArHF,eAyHE,oBAAC,gBAAD;AACE,EAAA,OAAO,eACL,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEI,QAAQ,CAACW,KADpB;AAEE,IAAA,QAAQ,EAAED,CAAC,IAAI;AACb9B,MAAAA,WAAW;AACZ,KAJH;AAKE,IAAA,KAAK,EAAEoB,QAAQ,CAACW,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAUE,EAAA,KAAK,eAAE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAzHF,CADF,CAPF;;AAiJA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,QAAQ,EAAEa,KAAK,CAACb;AADgB,CAAL,CAA7B;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpC,EAAAA,cAAc,EAAED,kBAAkB,CAACC,cAAD,EAAiBoC,QAAjB,CADI;AAEtCnC,EAAAA,WAAW,EAAEF,kBAAkB,CAACE,WAAD,EAAcmC,QAAd,CAFO;AAGtClC,EAAAA,WAAW,EAAEH,kBAAkB,CAACG,WAAD,EAAckC,QAAd;AAHO,CAAL,CAAnC;;AAMA,eAAejC,OAAO,CACpB8B,eADoB,EAEpBE,kBAFoB,CAAP,CAGb5C,UAAU,CAACgB,MAAD,CAAV,CAAmBY,QAAnB,CAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Typography,\n  Paper,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormLabel,\n  Switch\n} from \"@material-ui/core\";\n\nimport { bindActionCreators } from \"redux\";\nimport { updateSettings, togglePride, toggleLingo } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { colors } from \"../theme\";\nimport capitalize from \"lodash/capitalize\";\nimport keys from \"lodash/keys\";\n\nconst styles = theme => ({\n  content: {\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1, 2)\n  },\n  root: {\n    ...theme.mixins.gutters,\n    justifyContent: \"center\"\n  },\n  formLabel: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nconst Settings = ({\n  classes,\n  settings,\n  updateSettings,\n  togglePride,\n  toggleLingo\n}) => (\n  <div className={classes.root}>\n    <Paper className={classes.content}>\n      <Typography variant=\"h2\" gutterBottom>\n        Settings\n      </Typography>\n\n      <FormLabel className={classes.formLabel} component=\"legend\">\n        Color\n      </FormLabel>\n      <RadioGroup\n        row\n        aria-label=\"Color\"\n        name=\"color\"\n        value={settings.color}\n        onChange={event => {\n          updateSettings({ color: event.target.value });\n        }}\n      >\n        {keys(colors).map(color => {\n          return (\n            <FormControlLabel\n              value={color}\n              key={color}\n              control={<Radio />}\n              label={capitalize(color)}\n            />\n          );\n        })}\n      </RadioGroup>\n\n      <FormLabel className={classes.formLabel} component=\"legend\">\n        Browser mode\n      </FormLabel>\n      <RadioGroup\n        row\n        aria-label=\"BrowserMode\"\n        name=\"browserMode\"\n        value={settings.browserMode}\n        onChange={event => {\n          updateSettings({ browserMode: event.target.value });\n        }}\n      >\n        {[\"card\", \"table\"].map(browserMode => {\n          return (\n            <FormControlLabel\n              value={browserMode}\n              key={browserMode}\n              control={<Radio />}\n              label={capitalize(browserMode)}\n            />\n          );\n        })}\n      </RadioGroup>\n\n      <FormLabel className={classes.formLabel} component=\"legend\">\n        Theme\n      </FormLabel>\n      <RadioGroup\n        row\n        aria-label=\"Theme\"\n        name=\"theme\"\n        value={settings.theme}\n        onChange={event => {\n          updateSettings({ theme: event.target.value });\n        }}\n      >\n        {[\"light\", \"dark\"].map(theme => {\n          return (\n            <FormControlLabel\n              value={theme}\n              key={theme}\n              control={<Radio />}\n              label={capitalize(theme)}\n            />\n          );\n        })}\n      </RadioGroup>\n\n      <FormLabel className={classes.formLabel} component=\"legend\">\n        Units\n      </FormLabel>\n      <RadioGroup\n        row\n        aria-label=\"Units\"\n        name=\"units\"\n        value={settings.units}\n        onChange={event => {\n          updateSettings({ units: event.target.value });\n        }}\n      >\n        {[\"cl\", \"ml\", \"oz\", \"parts\"].map(unit => {\n          return (\n            <FormControlLabel\n              value={unit}\n              key={unit}\n              control={<Radio />}\n              label={unit}\n            />\n          );\n        })}\n      </RadioGroup>\n\n      <FormLabel className={classes.formLabel} component=\"legend\">\n        Pro-mode\n      </FormLabel>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={settings.lingo}\n            onChange={e => {\n              toggleLingo();\n            }}\n            value={settings.lingo}\n          />\n        }\n        label={<Typography component=\"span\">Use Bartender Lingo</Typography>}\n      />\n\n      <FormLabel className={classes.formLabel} component=\"legend\">\n        Pride!\n      </FormLabel>\n\n      <FormControlLabel\n        control={\n          <Switch\n            checked={settings.pride}\n            onChange={e => {\n              togglePride();\n            }}\n            value={settings.pride}\n          />\n        }\n        label={<Typography component=\"span\">Fly the colours</Typography>}\n      />\n    </Paper>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  settings: state.settings\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSettings: bindActionCreators(updateSettings, dispatch),\n  togglePride: bindActionCreators(togglePride, dispatch),\n  toggleLingo: bindActionCreators(toggleLingo, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Settings));\n"]},"metadata":{},"sourceType":"module"}