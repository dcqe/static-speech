{"ast":null,"code":"var _jsxFileName = \"/home/students/ge47qut/public_html/v2/react-speech/src/components/Filters/FilterChips.js\";\nimport React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Chip } from \"@material-ui/core\";\nimport { removeOrAddItemFromArray } from \"../../utilities/util\";\nimport { updateFilter, activateFilterDialog } from \"../../actions\";\n\nconst styles = theme => ({\n  chip: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst chipContent = {\n  favouritesOnly: () => \"Favourites\",\n  veganOnly: () => \"Vegan\",\n  ibaOnly: () => \"IBA\",\n  barOnly: () => \"Makeable from Bar\",\n  byIngredient: filterOptions => {\n    if (!filterOptions.ingredients.length) {\n      return \"Ingredients: all\";\n    }\n\n    return `Ingredients (${filterOptions.ingredientsRule === \"mustInclude\" ? \"all\" : \"any\"}):\n      ${filterOptions.ingredients.join(\", \")}`;\n  },\n  byGlass: filterOptions => {\n    return `Glasses: ${filterOptions.glasses.length ? filterOptions.glasses.join(\", \") : \"all\"}`;\n  },\n  byCategory: filterOptions => {\n    return `Categories: ${filterOptions.categories.length ? filterOptions.categories.join(\", \") : \"all\"}`;\n  }\n};\n\nconst FilterChips = ({\n  classes,\n  activateFilterDialog,\n  updateFilter,\n  filterOptions\n}) => {\n  const {\n    activeFilters\n  } = filterOptions;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, activeFilters.map(activeFilter => {\n    return /*#__PURE__*/React.createElement(Chip, {\n      key: activeFilter,\n      label: chipContent[activeFilter.toString()](filterOptions),\n      onClick: () => activateFilterDialog(activeFilter),\n      onDelete: () => updateFilter({\n        activeFilters: removeOrAddItemFromArray(activeFilter, activeFilters)\n      }),\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nconst mapStateToProps = state => ({\n  filterOptions: state.filterOptions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: bindActionCreators(updateFilter, dispatch),\n  activateFilterDialog: bindActionCreators(activateFilterDialog, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FilterChips));","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/Filters/FilterChips.js"],"names":["React","bindActionCreators","connect","withStyles","Chip","removeOrAddItemFromArray","updateFilter","activateFilterDialog","styles","theme","chip","margin","spacing","chipContent","favouritesOnly","veganOnly","ibaOnly","barOnly","byIngredient","filterOptions","ingredients","length","ingredientsRule","join","byGlass","glasses","byCategory","categories","FilterChips","classes","activeFilters","map","activeFilter","toString","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Chip } from \"@material-ui/core\";\nimport { removeOrAddItemFromArray } from \"../../utilities/util\";\nimport { updateFilter, activateFilterDialog } from \"../../actions\";\n\nconst styles = theme => ({\n  chip: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst chipContent = {\n  favouritesOnly: () => \"Favourites\",\n  veganOnly: () => \"Vegan\",\n  ibaOnly: () => \"IBA\",\n  barOnly: () => \"Makeable from Bar\",\n  byIngredient: filterOptions => {\n    if (!filterOptions.ingredients.length) {\n      return \"Ingredients: all\";\n    }\n    return `Ingredients (${\n      filterOptions.ingredientsRule === \"mustInclude\" ? \"all\" : \"any\"\n    }):\n      ${filterOptions.ingredients.join(\", \")}`;\n  },\n  byGlass: filterOptions => {\n    return `Glasses: ${\n      filterOptions.glasses.length ? filterOptions.glasses.join(\", \") : \"all\"\n    }`;\n  },\n  byCategory: filterOptions => {\n    return `Categories: ${\n      filterOptions.categories.length\n        ? filterOptions.categories.join(\", \")\n        : \"all\"\n    }`;\n  }\n};\n\nconst FilterChips = ({\n  classes,\n  activateFilterDialog,\n  updateFilter,\n  filterOptions\n}) => {\n  const { activeFilters } = filterOptions;\n  return (\n    <>\n      {activeFilters.map(activeFilter => {\n        return (\n          <Chip\n            key={activeFilter}\n            label={chipContent[activeFilter.toString()](filterOptions)}\n            onClick={() => activateFilterDialog(activeFilter)}\n            onDelete={() =>\n              updateFilter({\n                activeFilters: removeOrAddItemFromArray(\n                  activeFilter,\n                  activeFilters\n                )\n              })\n            }\n            className={classes.chip}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filterOptions: state.filterOptions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: bindActionCreators(updateFilter, dispatch),\n  activateFilterDialog: bindActionCreators(activateFilterDialog, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(FilterChips));\n"]},"metadata":{},"sourceType":"module"}