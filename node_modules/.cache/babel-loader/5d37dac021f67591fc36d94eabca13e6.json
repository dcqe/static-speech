{"ast":null,"code":"import React from\"react\";import{bindActionCreators}from\"redux\";import{connect}from\"react-redux\";import{DialogContent,Radio,RadioGroup,FormControl,FormControlLabel,Button}from\"@material-ui/core\";import IngredientPicker from\"../IngredientPicker\";import{updateFilter}from\"../../actions\";var GlassFilter=function GlassFilter(_ref){var ingredientsRule=_ref.ingredientsRule,selectedIngredients=_ref.selectedIngredients,updateFilter=_ref.updateFilter;return/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(RadioGroup,{value:ingredientsRule},/*#__PURE__*/React.createElement(FormControlLabel,{value:\"mustInclude\",control:/*#__PURE__*/React.createElement(Radio,null),label:\"Each cocktail must Include all of the following...\",onClick:function onClick(e){return ingredientsRule!==\"mustInclude\"&&updateFilter({ingredientsRule:\"mustInclude\"});}}),/*#__PURE__*/React.createElement(FormControlLabel,{value:\"canInclude\",control:/*#__PURE__*/React.createElement(Radio,null),label:\"Show me cocktails that include any of the following...\",onClick:function onClick(e){return ingredientsRule!==\"canInclude\"&&updateFilter({ingredientsRule:\"canInclude\"});}})),/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\"},/*#__PURE__*/React.createElement(IngredientPicker,{selectedIngredients:selectedIngredients,onIngredientsChange:function onIngredientsChange(selectedIngredients){updateFilter({ingredients:selectedIngredients});}}),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",onClick:function onClick(){updateFilter({ingredients:[]});}},\"Clear Ingredients\")));};var mapStateToProps=function mapStateToProps(state){return{selectedIngredients:state.filterOptions.ingredients,ingredientsRule:state.filterOptions.ingredientsRule};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateFilter:bindActionCreators(updateFilter,dispatch)};};export default connect(mapStateToProps,mapDispatchToProps)(GlassFilter);","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/Filters/IngredientFilterDialog.js"],"names":["React","bindActionCreators","connect","DialogContent","Radio","RadioGroup","FormControl","FormControlLabel","Button","IngredientPicker","updateFilter","GlassFilter","ingredientsRule","selectedIngredients","e","ingredients","mapStateToProps","state","filterOptions","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,kBAAT,KAAmC,OAAnC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OACEC,aADF,CAEEC,KAFF,CAGEC,UAHF,CAIEC,WAJF,CAKEC,gBALF,CAMEC,MANF,KAOO,mBAPP,CASA,MAAOC,CAAAA,gBAAP,KAA6B,qBAA7B,CACA,OAASC,YAAT,KAA6B,eAA7B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAId,IAHJC,CAAAA,eAGI,MAHJA,eAGI,CAFJC,mBAEI,MAFJA,mBAEI,CADJH,YACI,MADJA,YACI,CACJ,mBACE,oBAAC,aAAD,mBACE,oBAAC,UAAD,EAAY,KAAK,CAAEE,eAAnB,eACE,oBAAC,gBAAD,EACE,KAAK,CAAC,aADR,CAEE,OAAO,cAAE,oBAAC,KAAD,MAFX,CAGE,KAAK,CAAC,oDAHR,CAIE,OAAO,CAAE,iBAAAE,CAAC,QACRF,CAAAA,eAAe,GAAK,aAApB,EACAF,YAAY,CAAC,CAAEE,eAAe,CAAE,aAAnB,CAAD,CAFJ,EAJZ,EADF,cAUE,oBAAC,gBAAD,EACE,KAAK,CAAC,YADR,CAEE,OAAO,cAAE,oBAAC,KAAD,MAFX,CAGE,KAAK,CAAC,wDAHR,CAIE,OAAO,CAAE,iBAAAE,CAAC,QACRF,CAAAA,eAAe,GAAK,YAApB,EACAF,YAAY,CAAC,CAAEE,eAAe,CAAE,YAAnB,CAAD,CAFJ,EAJZ,EAVF,CADF,cAsBE,oBAAC,WAAD,EAAa,SAAS,CAAC,UAAvB,eACE,oBAAC,gBAAD,EACE,mBAAmB,CAAEC,mBADvB,CAEE,mBAAmB,CAAE,6BAAAA,mBAAmB,CAAI,CAC1CH,YAAY,CAAC,CAAEK,WAAW,CAAEF,mBAAf,CAAD,CAAZ,CACD,CAJH,EADF,cAOE,oBAAC,MAAD,EACE,KAAK,CAAC,WADR,CAEE,OAAO,CAAE,kBAAM,CACbH,YAAY,CAAC,CAAEK,WAAW,CAAE,EAAf,CAAD,CAAZ,CACD,CAJH,sBAPF,CAtBF,CADF,CAyCD,CA9CD,CAgDA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCJ,mBAAmB,CAAEI,KAAK,CAACC,aAAN,CAAoBH,WADT,CAEhCH,eAAe,CAAEK,KAAK,CAACC,aAAN,CAAoBN,eAFL,CAAL,EAA7B,CAKA,GAAMO,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCV,YAAY,CAAET,kBAAkB,CAACS,YAAD,CAAeU,QAAf,CADM,CAAL,EAAnC,CAIA,cAAelB,CAAAA,OAAO,CACpBc,eADoB,CAEpBG,kBAFoB,CAAP,CAGbR,WAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport {\n  DialogContent,\n  Radio,\n  RadioGroup,\n  FormControl,\n  FormControlLabel,\n  Button\n} from \"@material-ui/core\";\n\nimport IngredientPicker from \"../IngredientPicker\";\nimport { updateFilter } from \"../../actions\";\n\nconst GlassFilter = ({\n  ingredientsRule,\n  selectedIngredients,\n  updateFilter\n}) => {\n  return (\n    <DialogContent>\n      <RadioGroup value={ingredientsRule}>\n        <FormControlLabel\n          value=\"mustInclude\"\n          control={<Radio />}\n          label=\"Each cocktail must Include all of the following...\"\n          onClick={e =>\n            ingredientsRule !== \"mustInclude\" &&\n            updateFilter({ ingredientsRule: \"mustInclude\" })\n          }\n        />\n        <FormControlLabel\n          value=\"canInclude\"\n          control={<Radio />}\n          label=\"Show me cocktails that include any of the following...\"\n          onClick={e =>\n            ingredientsRule !== \"canInclude\" &&\n            updateFilter({ ingredientsRule: \"canInclude\" })\n          }\n        />\n      </RadioGroup>\n\n      <FormControl component=\"fieldset\">\n        <IngredientPicker\n          selectedIngredients={selectedIngredients}\n          onIngredientsChange={selectedIngredients => {\n            updateFilter({ ingredients: selectedIngredients });\n          }}\n        />\n        <Button\n          color=\"secondary\"\n          onClick={() => {\n            updateFilter({ ingredients: [] });\n          }}\n        >\n          Clear Ingredients\n        </Button>\n      </FormControl>\n    </DialogContent>\n  );\n};\n\nconst mapStateToProps = state => ({\n  selectedIngredients: state.filterOptions.ingredients,\n  ingredientsRule: state.filterOptions.ingredientsRule\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: bindActionCreators(updateFilter, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GlassFilter);\n"]},"metadata":{},"sourceType":"module"}