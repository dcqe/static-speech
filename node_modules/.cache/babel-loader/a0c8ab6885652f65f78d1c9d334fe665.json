{"ast":null,"code":"import React from\"react\";import{bindActionCreators}from\"redux\";import{connect}from\"react-redux\";import{DialogContent,FormGroup,FormLabel,FormControl,FormControlLabel,Checkbox}from\"@material-ui/core\";import{allCategoriesSelector}from\"../../selectors\";import{updateFilter}from\"../../actions\";import{removeOrAddItemFromArray}from\"../../utilities/util\";var CategoryFilter=function CategoryFilter(_ref){var categories=_ref.categories,allCategories=_ref.allCategories,updateFilter=_ref.updateFilter;return/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\"},/*#__PURE__*/React.createElement(FormLabel,{component:\"legend\"},\"Category\"),/*#__PURE__*/React.createElement(FormGroup,{row:true},allCategories.map(function(category){return/*#__PURE__*/React.createElement(FormControlLabel,{key:category,control:/*#__PURE__*/React.createElement(Checkbox,{checked:categories.includes(category),onChange:function onChange(){return updateFilter({categories:removeOrAddItemFromArray(category,categories)});},value:\"checkedB\",color:\"primary\"}),label:category});}))));};var mapStateToProps=function mapStateToProps(state){return{categories:state.filterOptions.categories,allCategories:allCategoriesSelector(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateFilter:bindActionCreators(updateFilter,dispatch)};};export default connect(mapStateToProps,mapDispatchToProps)(CategoryFilter);","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/Filters/CategoryFilterDialog.js"],"names":["React","bindActionCreators","connect","DialogContent","FormGroup","FormLabel","FormControl","FormControlLabel","Checkbox","allCategoriesSelector","updateFilter","removeOrAddItemFromArray","CategoryFilter","categories","allCategories","map","category","includes","mapStateToProps","state","filterOptions","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,kBAAT,KAAmC,OAAnC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OACEC,aADF,CAEEC,SAFF,CAGEC,SAHF,CAIEC,WAJF,CAKEC,gBALF,CAMEC,QANF,KAOO,mBAPP,CASA,OAASC,qBAAT,KAAsC,iBAAtC,CACA,OAASC,YAAT,KAA6B,eAA7B,CACA,OAASC,wBAAT,KAAyC,sBAAzC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAiD,IAA9CC,CAAAA,UAA8C,MAA9CA,UAA8C,CAAlCC,aAAkC,MAAlCA,aAAkC,CAAnBJ,YAAmB,MAAnBA,YAAmB,CACtE,mBACE,oBAAC,aAAD,mBACE,oBAAC,WAAD,EAAa,SAAS,CAAC,UAAvB,eACE,oBAAC,SAAD,EAAW,SAAS,CAAC,QAArB,aADF,cAEE,oBAAC,SAAD,EAAW,GAAG,KAAd,EACGI,aAAa,CAACC,GAAd,CAAkB,SAAAC,QAAQ,CAAI,CAC7B,mBACE,oBAAC,gBAAD,EACE,GAAG,CAAEA,QADP,CAEE,OAAO,cACL,oBAAC,QAAD,EACE,OAAO,CAAEH,UAAU,CAACI,QAAX,CAAoBD,QAApB,CADX,CAEE,QAAQ,CAAE,0BACRN,CAAAA,YAAY,CAAC,CACXG,UAAU,CAAEF,wBAAwB,CAClCK,QADkC,CAElCH,UAFkC,CADzB,CAAD,CADJ,EAFZ,CAUE,KAAK,CAAC,UAVR,CAWE,KAAK,CAAC,SAXR,EAHJ,CAiBE,KAAK,CAAEG,QAjBT,EADF,CAqBD,CAtBA,CADH,CAFF,CADF,CADF,CAgCD,CAjCD,CAmCA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCN,UAAU,CAAEM,KAAK,CAACC,aAAN,CAAoBP,UADA,CAEhCC,aAAa,CAAEL,qBAAqB,CAACU,KAAD,CAFJ,CAAL,EAA7B,CAKA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCZ,YAAY,CAAET,kBAAkB,CAACS,YAAD,CAAeY,QAAf,CADM,CAAL,EAAnC,CAIA,cAAepB,CAAAA,OAAO,CACpBgB,eADoB,CAEpBG,kBAFoB,CAAP,CAGbT,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport {\n  DialogContent,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\n\nimport { allCategoriesSelector } from \"../../selectors\";\nimport { updateFilter } from \"../../actions\";\nimport { removeOrAddItemFromArray } from \"../../utilities/util\";\n\nconst CategoryFilter = ({ categories, allCategories, updateFilter }) => {\n  return (\n    <DialogContent>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Category</FormLabel>\n        <FormGroup row>\n          {allCategories.map(category => {\n            return (\n              <FormControlLabel\n                key={category}\n                control={\n                  <Checkbox\n                    checked={categories.includes(category)}\n                    onChange={() =>\n                      updateFilter({\n                        categories: removeOrAddItemFromArray(\n                          category,\n                          categories\n                        )\n                      })\n                    }\n                    value=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label={category}\n              />\n            );\n          })}\n        </FormGroup>\n      </FormControl>\n    </DialogContent>\n  );\n};\n\nconst mapStateToProps = state => ({\n  categories: state.filterOptions.categories,\n  allCategories: allCategoriesSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: bindActionCreators(updateFilter, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoryFilter);\n"]},"metadata":{},"sourceType":"module"}