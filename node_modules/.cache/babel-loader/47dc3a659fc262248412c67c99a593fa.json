{"ast":null,"code":"import React from\"react\";import{Tooltip}from\"@material-ui/core\";import{connect}from\"react-redux\";import{withStyles}from\"@material-ui/core/styles\";import compact from\"lodash/compact\";import{createMeasurementString}from\"../utilities/cocktail.utils\";var styles={tooltip:{cursor:\"pointer\"}};var IngredientDetail=function IngredientDetail(_ref){var item=_ref.item,units=_ref.units,useLingo=_ref.useLingo,allIngredients=_ref.allIngredients,classes=_ref.classes;if(item.special)return/*#__PURE__*/React.createElement(\"span\",null,item.special);var _ref2=allIngredients[item.ingredient]||{},taste=_ref2.taste,abv=_ref2.abv,vegan=_ref2.vegan;var toolTipContent=[];toolTipContent.push(abv>0?abv+\"% abv\":\"Non-alcoholic\");toolTipContent.push(vegan===false?\"Non-Vegan\":\"\");toolTipContent.push(taste);return/*#__PURE__*/React.createElement(\"span\",null,item.unit===\"cl\"?createMeasurementString(item.amount,units,useLingo):item.amount,\" \",/*#__PURE__*/React.createElement(Tooltip,{className:classes.tooltip,title:compact(toolTipContent).join(\", \"),placement:\"top\"},/*#__PURE__*/React.createElement(\"strong\",null,item.label||item.ingredient)));};var mapStateToProps=function mapStateToProps(state){return{allIngredients:state.db.ingredients,units:state.settings.units,useLingo:state.settings.lingo};};export default withStyles(styles)(connect(mapStateToProps)(IngredientDetail));","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/IngredientDetail.js"],"names":["React","Tooltip","connect","withStyles","compact","createMeasurementString","styles","tooltip","cursor","IngredientDetail","item","units","useLingo","allIngredients","classes","special","ingredient","taste","abv","vegan","toolTipContent","push","unit","amount","join","label","mapStateToProps","state","db","ingredients","settings","lingo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,OAASC,uBAAT,KAAwC,6BAAxC,CACA,GAAMC,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,CACPC,MAAM,CAAE,SADD,CADI,CAAf,CAMA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAMnB,IALJC,CAAAA,IAKI,MALJA,IAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,QAGI,MAHJA,QAGI,CAFJC,cAEI,MAFJA,cAEI,CADJC,OACI,MADJA,OACI,CACJ,GAAIJ,IAAI,CAACK,OAAT,CAAkB,mBAAO,gCAAOL,IAAI,CAACK,OAAZ,CAAP,CADd,UAG0BF,cAAc,CAACH,IAAI,CAACM,UAAN,CAAd,EAAmC,EAH7D,CAGIC,KAHJ,OAGIA,KAHJ,CAGWC,GAHX,OAGWA,GAHX,CAGgBC,KAHhB,OAGgBA,KAHhB,CAKJ,GAAMC,CAAAA,cAAc,CAAG,EAAvB,CACAA,cAAc,CAACC,IAAf,CAAoBH,GAAG,CAAG,CAAN,CAAUA,GAAG,CAAG,OAAhB,CAA0B,eAA9C,EACAE,cAAc,CAACC,IAAf,CAAoBF,KAAK,GAAK,KAAV,CAAkB,WAAlB,CAAgC,EAApD,EACAC,cAAc,CAACC,IAAf,CAAoBJ,KAApB,EAEA,mBACE,gCACGP,IAAI,CAACY,IAAL,GAAc,IAAd,CACGjB,uBAAuB,CAACK,IAAI,CAACa,MAAN,CAAcZ,KAAd,CAAqBC,QAArB,CAD1B,CAEGF,IAAI,CAACa,MAHX,CAGmB,GAHnB,cAIE,oBAAC,OAAD,EACE,SAAS,CAAET,OAAO,CAACP,OADrB,CAEE,KAAK,CAAEH,OAAO,CAACgB,cAAD,CAAP,CAAwBI,IAAxB,CAA6B,IAA7B,CAFT,CAGE,SAAS,CAAC,KAHZ,eAKE,kCAASd,IAAI,CAACe,KAAL,EAAcf,IAAI,CAACM,UAA5B,CALF,CAJF,CADF,CAcD,CA9BD,CAgCA,GAAMU,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCd,cAAc,CAAEc,KAAK,CAACC,EAAN,CAASC,WADO,CAEhClB,KAAK,CAAEgB,KAAK,CAACG,QAAN,CAAenB,KAFU,CAGhCC,QAAQ,CAAEe,KAAK,CAACG,QAAN,CAAeC,KAHO,CAAL,EAA7B,CAMA,cAAe5B,CAAAA,UAAU,CAACG,MAAD,CAAV,CAAmBJ,OAAO,CAACwB,eAAD,CAAP,CAAyBjB,gBAAzB,CAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport compact from \"lodash/compact\";\nimport { createMeasurementString } from \"../utilities/cocktail.utils\";\nconst styles = {\n  tooltip: {\n    cursor: \"pointer\"\n  }\n};\n\nconst IngredientDetail = ({\n  item,\n  units,\n  useLingo,\n  allIngredients,\n  classes\n}) => {\n  if (item.special) return <span>{item.special}</span>;\n\n  const { taste, abv, vegan } = allIngredients[item.ingredient] || {};\n\n  const toolTipContent = [];\n  toolTipContent.push(abv > 0 ? abv + \"% abv\" : \"Non-alcoholic\");\n  toolTipContent.push(vegan === false ? \"Non-Vegan\" : \"\");\n  toolTipContent.push(taste);\n\n  return (\n    <span>\n      {item.unit === \"cl\"\n        ? createMeasurementString(item.amount, units, useLingo)\n        : item.amount}{\" \"}\n      <Tooltip\n        className={classes.tooltip}\n        title={compact(toolTipContent).join(\", \")}\n        placement=\"top\"\n      >\n        <strong>{item.label || item.ingredient}</strong>\n      </Tooltip>\n    </span>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allIngredients: state.db.ingredients,\n  units: state.settings.units,\n  useLingo: state.settings.lingo\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(IngredientDetail));\n"]},"metadata":{},"sourceType":"module"}