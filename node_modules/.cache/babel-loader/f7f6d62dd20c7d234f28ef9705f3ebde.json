{"ast":null,"code":"import _slicedToArray from\"/home/students/ge47qut/public_html/v2/react-speech/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import InfiniteScroll from\"react-infinite-scroller\";import{Typography,Paper,Fade}from\"@material-ui/core\";import CardView from\"./CardView\";import TableView from\"./TableView\";import{withStyles}from\"@material-ui/core/styles\";import BadMood from\"@material-ui/icons/MoodBad\";var styles=function styles(theme){return{content:{padding:theme.spacing(1)},noResults:{textAlign:\"center\",padding:theme.spacing(1)},noResutlsIcon:{fontSize:\"10rem\"}};};var PER_PAGE=9;var CocktailList=function CocktailList(_ref){var browserMode=_ref.browserMode,classes=_ref.classes,_ref$cocktails=_ref.cocktails,cocktails=_ref$cocktails===void 0?[]:_ref$cocktails;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var displayedCocktails=cocktails.slice(0,PER_PAGE+page*PER_PAGE);var View=browserMode===\"card\"?CardView:TableView;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.content},displayedCocktails.length>0&&/*#__PURE__*/React.createElement(Fade,{in:displayedCocktails.length>0},/*#__PURE__*/React.createElement(InfiniteScroll,{loadMore:setPage,hasMore:displayedCocktails.length<cocktails.length},/*#__PURE__*/React.createElement(View,{displayedCocktails:displayedCocktails}))),!cocktails.length&&/*#__PURE__*/React.createElement(Paper,{className:classes.noResults},/*#__PURE__*/React.createElement(BadMood,{className:classes.noResutlsIcon}),/*#__PURE__*/React.createElement(Typography,{gutterBottom:true},\"No results\"))));};var mapStateToProps=function mapStateToProps(state){return{browserMode:state.settings.browserMode};};export default withStyles(styles)(connect(mapStateToProps)(CocktailList));","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/CocktailList.js"],"names":["React","useState","connect","InfiniteScroll","Typography","Paper","Fade","CardView","TableView","withStyles","BadMood","styles","theme","content","padding","spacing","noResults","textAlign","noResutlsIcon","fontSize","PER_PAGE","CocktailList","browserMode","classes","cocktails","page","setPage","displayedCocktails","slice","View","length","mapStateToProps","state","settings"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,OAASC,UAAT,CAAqBC,KAArB,CAA4BC,IAA5B,KAAwC,mBAAxC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,4BAApB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,CAAI,CACtB,MAAO,CACLC,OAAO,CAAE,CACPC,OAAO,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF,CADJ,CAILC,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CAETH,OAAO,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CAFA,CAJN,CAQLG,aAAa,CAAE,CACbC,QAAQ,CAAE,OADG,CARV,CAAP,CAYD,CAbD,CAeA,GAAMC,CAAAA,QAAQ,CAAG,CAAjB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA8C,IAA3CC,CAAAA,WAA2C,MAA3CA,WAA2C,CAA9BC,OAA8B,MAA9BA,OAA8B,qBAArBC,SAAqB,CAArBA,SAAqB,yBAAT,EAAS,8BACzCvB,QAAQ,CAAC,CAAD,CADiC,wCAC1DwB,IAD0D,eACpDC,OADoD,eAGjE,GAAMC,CAAAA,kBAAkB,CAAGH,SAAS,CAACI,KAAV,CAAgB,CAAhB,CAAmBR,QAAQ,CAAGK,IAAI,CAAGL,QAArC,CAA3B,CACA,GAAMS,CAAAA,IAAI,CAAGP,WAAW,GAAK,MAAhB,CAAyBf,QAAzB,CAAoCC,SAAjD,CACA,mBACE,4CACE,2BAAK,SAAS,CAAEe,OAAO,CAACV,OAAxB,EACGc,kBAAkB,CAACG,MAAnB,CAA4B,CAA5B,eACC,oBAAC,IAAD,EAAM,EAAE,CAAEH,kBAAkB,CAACG,MAAnB,CAA4B,CAAtC,eACE,oBAAC,cAAD,EACE,QAAQ,CAAEJ,OADZ,CAEE,OAAO,CAAEC,kBAAkB,CAACG,MAAnB,CAA4BN,SAAS,CAACM,MAFjD,eAIE,oBAAC,IAAD,EAAM,kBAAkB,CAAEH,kBAA1B,EAJF,CADF,CAFJ,CAYG,CAACH,SAAS,CAACM,MAAX,eACC,oBAAC,KAAD,EAAO,SAAS,CAAEP,OAAO,CAACP,SAA1B,eACE,oBAAC,OAAD,EAAS,SAAS,CAAEO,OAAO,CAACL,aAA5B,EADF,cAEE,oBAAC,UAAD,EAAY,YAAY,KAAxB,eAFF,CAbJ,CADF,CADF,CAuBD,CA5BD,CA8BA,GAAMa,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCV,WAAW,CAAEU,KAAK,CAACC,QAAN,CAAeX,WADI,CAAL,EAA7B,CAIA,cAAeb,CAAAA,UAAU,CAACE,MAAD,CAAV,CAAmBT,OAAO,CAAC6B,eAAD,CAAP,CAAyBV,YAAzB,CAAnB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Typography, Paper, Fade } from \"@material-ui/core\";\nimport CardView from \"./CardView\";\nimport TableView from \"./TableView\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport BadMood from \"@material-ui/icons/MoodBad\";\n\nconst styles = theme => {\n  return {\n    content: {\n      padding: theme.spacing(1)\n    },\n    noResults: {\n      textAlign: \"center\",\n      padding: theme.spacing(1)\n    },\n    noResutlsIcon: {\n      fontSize: \"10rem\"\n    }\n  };\n};\n\nconst PER_PAGE = 9;\n\nconst CocktailList = ({ browserMode, classes, cocktails = [] }) => {\n  const [page, setPage] = useState(0);\n\n  const displayedCocktails = cocktails.slice(0, PER_PAGE + page * PER_PAGE);\n  const View = browserMode === \"card\" ? CardView : TableView;\n  return (\n    <div>\n      <div className={classes.content}>\n        {displayedCocktails.length > 0 && (\n          <Fade in={displayedCocktails.length > 0}>\n            <InfiniteScroll\n              loadMore={setPage}\n              hasMore={displayedCocktails.length < cocktails.length}\n            >\n              <View displayedCocktails={displayedCocktails} />\n            </InfiniteScroll>\n          </Fade>\n        )}\n\n        {!cocktails.length && (\n          <Paper className={classes.noResults}>\n            <BadMood className={classes.noResutlsIcon} />\n            <Typography gutterBottom>No results</Typography>\n          </Paper>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  browserMode: state.settings.browserMode\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(CocktailList));\n"]},"metadata":{},"sourceType":"module"}