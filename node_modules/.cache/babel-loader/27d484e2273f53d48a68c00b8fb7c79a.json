{"ast":null,"code":"import cocktails from \"../data/cocktails.json\";\nimport ingredients from \"../data/ingredients.json\";\nimport glasses from \"../data/glasses.json\";\nimport { isArray } from \"lodash\";\nexport function fetchCocktails() {\n  return Promise.resolve(cocktails.map(cocktail => {\n    // calculate the slug\n    const slug = cocktail.name.toLowerCase().replace(/ /, \"-\"); // calculate if the cocktail is vegan\n\n    const vegan = !cocktail.ingredients.filter(i => i.ingredient).some(function (i) {\n      return ingredients[i.ingredient] && ingredients[i.ingredient].vegan === false;\n    }); // force colors to be an array\n\n    const colors = isArray(cocktail.colors) ? cocktail.colors : [cocktail.colors];\n    return { ...cocktail,\n      slug,\n      vegan,\n      colors\n    };\n  }));\n}\nexport function fetchIngredients() {\n  return Promise.resolve(ingredients);\n}\nexport function fetchGlasses() {\n  return Promise.resolve(glasses);\n}","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/services/cocktail.service.js"],"names":["cocktails","ingredients","glasses","isArray","fetchCocktails","Promise","resolve","map","cocktail","slug","name","toLowerCase","replace","vegan","filter","i","ingredient","some","colors","fetchIngredients","fetchGlasses"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,SAASC,OAAT,QAAwB,QAAxB;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAOC,OAAO,CAACC,OAAR,CACLN,SAAS,CAACO,GAAV,CAAcC,QAAQ,IAAI;AACxB;AACA,UAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcC,WAAd,GAA4BC,OAA5B,CAAoC,GAApC,EAAyC,GAAzC,CAAb,CAFwB,CAIxB;;AACA,UAAMC,KAAK,GAAG,CAACL,QAAQ,CAACP,WAAT,CACZa,MADY,CACLC,CAAC,IAAIA,CAAC,CAACC,UADF,EAEZC,IAFY,CAEP,UAASF,CAAT,EAAY;AAChB,aACEd,WAAW,CAACc,CAAC,CAACC,UAAH,CAAX,IACAf,WAAW,CAACc,CAAC,CAACC,UAAH,CAAX,CAA0BH,KAA1B,KAAoC,KAFtC;AAID,KAPY,CAAf,CALwB,CAcxB;;AACA,UAAMK,MAAM,GAAGf,OAAO,CAACK,QAAQ,CAACU,MAAV,CAAP,GACXV,QAAQ,CAACU,MADE,GAEX,CAACV,QAAQ,CAACU,MAAV,CAFJ;AAIA,WAAO,EAAE,GAAGV,QAAL;AAAeC,MAAAA,IAAf;AAAqBI,MAAAA,KAArB;AAA4BK,MAAAA;AAA5B,KAAP;AACD,GApBD,CADK,CAAP;AAuBD;AAED,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAOd,OAAO,CAACC,OAAR,CAAgBL,WAAhB,CAAP;AACD;AAED,OAAO,SAASmB,YAAT,GAAwB;AAC7B,SAAOf,OAAO,CAACC,OAAR,CAAgBJ,OAAhB,CAAP;AACD","sourcesContent":["import cocktails from \"../data/cocktails.json\";\nimport ingredients from \"../data/ingredients.json\";\nimport glasses from \"../data/glasses.json\";\n\nimport { isArray } from \"lodash\";\n\nexport function fetchCocktails() {\n  return Promise.resolve(\n    cocktails.map(cocktail => {\n      // calculate the slug\n      const slug = cocktail.name.toLowerCase().replace(/ /, \"-\");\n\n      // calculate if the cocktail is vegan\n      const vegan = !cocktail.ingredients\n        .filter(i => i.ingredient)\n        .some(function(i) {\n          return (\n            ingredients[i.ingredient] &&\n            ingredients[i.ingredient].vegan === false\n          );\n        });\n\n      // force colors to be an array\n      const colors = isArray(cocktail.colors)\n        ? cocktail.colors\n        : [cocktail.colors];\n\n      return { ...cocktail, slug, vegan, colors };\n    })\n  );\n}\n\nexport function fetchIngredients() {\n  return Promise.resolve(ingredients);\n}\n\nexport function fetchGlasses() {\n  return Promise.resolve(glasses);\n}\n"]},"metadata":{},"sourceType":"module"}