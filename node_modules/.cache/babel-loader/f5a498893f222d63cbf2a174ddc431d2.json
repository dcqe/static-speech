{"ast":null,"code":"import React from\"react\";import{bindActionCreators}from\"redux\";import{connect}from\"react-redux\";import{withStyles}from\"@material-ui/core/styles\";import{Chip}from\"@material-ui/core\";import{removeOrAddItemFromArray}from\"../../utilities/util\";import{updateFilter,activateFilterDialog}from\"../../actions\";var styles=function styles(theme){return{chip:{margin:theme.spacing(1)}};};var chipContent={favouritesOnly:function favouritesOnly(){return\"Favourites\";},veganOnly:function veganOnly(){return\"Vegan\";},ibaOnly:function ibaOnly(){return\"IBA\";},barOnly:function barOnly(){return\"Makeable from Bar\";},byIngredient:function byIngredient(filterOptions){if(!filterOptions.ingredients.length){return\"Ingredients: all\";}return\"Ingredients (\".concat(filterOptions.ingredientsRule===\"mustInclude\"?\"all\":\"any\",\"):\\n      \").concat(filterOptions.ingredients.join(\", \"));},byGlass:function byGlass(filterOptions){return\"Glasses: \".concat(filterOptions.glasses.length?filterOptions.glasses.join(\", \"):\"all\");},byCategory:function byCategory(filterOptions){return\"Categories: \".concat(filterOptions.categories.length?filterOptions.categories.join(\", \"):\"all\");}};var FilterChips=function FilterChips(_ref){var classes=_ref.classes,activateFilterDialog=_ref.activateFilterDialog,updateFilter=_ref.updateFilter,filterOptions=_ref.filterOptions;var activeFilters=filterOptions.activeFilters;return/*#__PURE__*/React.createElement(React.Fragment,null,activeFilters.map(function(activeFilter){return/*#__PURE__*/React.createElement(Chip,{key:activeFilter,label:chipContent[activeFilter.toString()](filterOptions),onClick:function onClick(){return activateFilterDialog(activeFilter);},onDelete:function onDelete(){return updateFilter({activeFilters:removeOrAddItemFromArray(activeFilter,activeFilters)});},className:classes.chip});}));};var mapStateToProps=function mapStateToProps(state){return{filterOptions:state.filterOptions};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateFilter:bindActionCreators(updateFilter,dispatch),activateFilterDialog:bindActionCreators(activateFilterDialog,dispatch)};};export default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(FilterChips));","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/Filters/FilterChips.js"],"names":["React","bindActionCreators","connect","withStyles","Chip","removeOrAddItemFromArray","updateFilter","activateFilterDialog","styles","theme","chip","margin","spacing","chipContent","favouritesOnly","veganOnly","ibaOnly","barOnly","byIngredient","filterOptions","ingredients","length","ingredientsRule","join","byGlass","glasses","byCategory","categories","FilterChips","classes","activeFilters","map","activeFilter","toString","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Chip } from \"@material-ui/core\";\nimport { removeOrAddItemFromArray } from \"../../utilities/util\";\nimport { updateFilter, activateFilterDialog } from \"../../actions\";\n\nconst styles = theme => ({\n  chip: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst chipContent = {\n  favouritesOnly: () => \"Favourites\",\n  veganOnly: () => \"Vegan\",\n  ibaOnly: () => \"IBA\",\n  barOnly: () => \"Makeable from Bar\",\n  byIngredient: filterOptions => {\n    if (!filterOptions.ingredients.length) {\n      return \"Ingredients: all\";\n    }\n    return `Ingredients (${\n      filterOptions.ingredientsRule === \"mustInclude\" ? \"all\" : \"any\"\n    }):\n      ${filterOptions.ingredients.join(\", \")}`;\n  },\n  byGlass: filterOptions => {\n    return `Glasses: ${\n      filterOptions.glasses.length ? filterOptions.glasses.join(\", \") : \"all\"\n    }`;\n  },\n  byCategory: filterOptions => {\n    return `Categories: ${\n      filterOptions.categories.length\n        ? filterOptions.categories.join(\", \")\n        : \"all\"\n    }`;\n  }\n};\n\nconst FilterChips = ({\n  classes,\n  activateFilterDialog,\n  updateFilter,\n  filterOptions\n}) => {\n  const { activeFilters } = filterOptions;\n  return (\n    <>\n      {activeFilters.map(activeFilter => {\n        return (\n          <Chip\n            key={activeFilter}\n            label={chipContent[activeFilter.toString()](filterOptions)}\n            onClick={() => activateFilterDialog(activeFilter)}\n            onDelete={() =>\n              updateFilter({\n                activeFilters: removeOrAddItemFromArray(\n                  activeFilter,\n                  activeFilters\n                )\n              })\n            }\n            className={classes.chip}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filterOptions: state.filterOptions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: bindActionCreators(updateFilter, dispatch),\n  activateFilterDialog: bindActionCreators(activateFilterDialog, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(FilterChips));\n"]},"metadata":{},"sourceType":"module"}