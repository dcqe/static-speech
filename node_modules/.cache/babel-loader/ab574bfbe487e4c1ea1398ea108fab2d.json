{"ast":null,"code":"import React from\"react\";import capitalize from\"lodash/capitalize\";import{withStyles}from\"@material-ui/core/styles\";import ConditionalHidden from\"./ConditionalHidden\";import CocktailActions from\"./CocktailActions\";import{TableRow,TableHead,TableContainer,TableCell,TableBody,Table}from\"@material-ui/core\";import CocktailAvatar from\"./CocktailAvatar\";var styles=function styles(){return{root:{width:\"100%\"}};};var TableView=function TableView(_ref){var classes=_ref.classes,displayedCocktails=_ref.displayedCocktails;var columns=[{name:\"name\"},{name:\"category\",hideOnXS:true}];return/*#__PURE__*/React.createElement(TableContainer,{className:classes.container},/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Appearance\"),columns.map(function(column){return/*#__PURE__*/React.createElement(ConditionalHidden,{key:column.name,hideOnXS:column.hideOnXS},/*#__PURE__*/React.createElement(TableCell,null,capitalize(column.name)));}),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Actions\"))),/*#__PURE__*/React.createElement(TableBody,null,displayedCocktails.map(function(cocktail){return/*#__PURE__*/React.createElement(TableRow,{hover:true,tabIndex:-1,key:cocktail.name},/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(CocktailAvatar,{cocktail:cocktail})),columns.map(function(column){return/*#__PURE__*/React.createElement(ConditionalHidden,{key:column.name,hideOnXS:column.hideOnXS},/*#__PURE__*/React.createElement(TableCell,null,cocktail[column.name]));}),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},/*#__PURE__*/React.createElement(CocktailActions,{cocktail:cocktail,hideLabelOnXS:true})));}))));};export default withStyles(styles)(TableView);","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/TableView.js"],"names":["React","capitalize","withStyles","ConditionalHidden","CocktailActions","TableRow","TableHead","TableContainer","TableCell","TableBody","Table","CocktailAvatar","styles","root","width","TableView","classes","displayedCocktails","columns","name","hideOnXS","container","map","column","cocktail"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,OACEC,QADF,CAEEC,SAFF,CAGEC,cAHF,CAIEC,SAJF,CAKEC,SALF,CAMEC,KANF,KAOO,mBAPP,CAQA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,MAAO,CACLC,IAAI,CAAE,CACJC,KAAK,CAAE,MADH,CADD,CAAP,CAKD,CAND,CAQA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAqC,IAAlCC,CAAAA,OAAkC,MAAlCA,OAAkC,CAAzBC,kBAAyB,MAAzBA,kBAAyB,CACrD,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,IAAI,CAAE,MADR,CADc,CAId,CAAEA,IAAI,CAAE,UAAR,CAAoBC,QAAQ,CAAE,IAA9B,CAJc,CAAhB,CAOA,mBACE,oBAAC,cAAD,EAAgB,SAAS,CAAEJ,OAAO,CAACK,SAAnC,eACE,oBAAC,KAAD,mBACE,oBAAC,SAAD,mBACE,oBAAC,QAAD,mBACE,oBAAC,SAAD,mBADF,CAEGH,OAAO,CAACI,GAAR,CAAY,SAAAC,MAAM,qBACjB,oBAAC,iBAAD,EAAmB,GAAG,CAAEA,MAAM,CAACJ,IAA/B,CAAqC,QAAQ,CAAEI,MAAM,CAACH,QAAtD,eACE,oBAAC,SAAD,MAAYnB,UAAU,CAACsB,MAAM,CAACJ,IAAR,CAAtB,CADF,CADiB,EAAlB,CAFH,cAOE,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,YAPF,CADF,CADF,cAYE,oBAAC,SAAD,MACGF,kBAAkB,CAACK,GAAnB,CAAuB,SAAAE,QAAQ,qBAC9B,oBAAC,QAAD,EAAU,KAAK,KAAf,CAAgB,QAAQ,CAAE,CAAC,CAA3B,CAA8B,GAAG,CAAEA,QAAQ,CAACL,IAA5C,eACE,oBAAC,SAAD,mBACE,oBAAC,cAAD,EAAgB,QAAQ,CAAEK,QAA1B,EADF,CADF,CAIGN,OAAO,CAACI,GAAR,CAAY,SAAAC,MAAM,CAAI,CACrB,mBACE,oBAAC,iBAAD,EACE,GAAG,CAAEA,MAAM,CAACJ,IADd,CAEE,QAAQ,CAAEI,MAAM,CAACH,QAFnB,eAIE,oBAAC,SAAD,MAAYI,QAAQ,CAACD,MAAM,CAACJ,IAAR,CAApB,CAJF,CADF,CAQD,CATA,CAJH,cAcE,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,eACE,oBAAC,eAAD,EAAiB,QAAQ,CAAEK,QAA3B,CAAqC,aAAa,CAAE,IAApD,EADF,CAdF,CAD8B,EAA/B,CADH,CAZF,CADF,CADF,CAuCD,CA/CD,CAiDA,cAAetB,CAAAA,UAAU,CAACU,MAAD,CAAV,CAAmBG,SAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport capitalize from \"lodash/capitalize\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ConditionalHidden from \"./ConditionalHidden\";\nimport CocktailActions from \"./CocktailActions\";\nimport {\n  TableRow,\n  TableHead,\n  TableContainer,\n  TableCell,\n  TableBody,\n  Table\n} from \"@material-ui/core\";\nimport CocktailAvatar from \"./CocktailAvatar\";\n\nconst styles = () => {\n  return {\n    root: {\n      width: \"100%\"\n    }\n  };\n};\n\nconst TableView = ({ classes, displayedCocktails }) => {\n  const columns = [\n    {\n      name: \"name\"\n    },\n    { name: \"category\", hideOnXS: true }\n  ];\n\n  return (\n    <TableContainer className={classes.container}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Appearance</TableCell>\n            {columns.map(column => (\n              <ConditionalHidden key={column.name} hideOnXS={column.hideOnXS}>\n                <TableCell>{capitalize(column.name)}</TableCell>\n              </ConditionalHidden>\n            ))}\n            <TableCell align=\"right\">Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {displayedCocktails.map(cocktail => (\n            <TableRow hover tabIndex={-1} key={cocktail.name}>\n              <TableCell>\n                <CocktailAvatar cocktail={cocktail} />\n              </TableCell>\n              {columns.map(column => {\n                return (\n                  <ConditionalHidden\n                    key={column.name}\n                    hideOnXS={column.hideOnXS}\n                  >\n                    <TableCell>{cocktail[column.name]}</TableCell>\n                  </ConditionalHidden>\n                );\n              })}\n              <TableCell align=\"right\">\n                <CocktailActions cocktail={cocktail} hideLabelOnXS={true} />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default withStyles(styles)(TableView);\n"]},"metadata":{},"sourceType":"module"}