{"ast":null,"code":"import React from\"react\";import{Dialog,DialogTitle,DialogActions,IconButton,Button}from\"@material-ui/core\";import{withStyles}from\"@material-ui/core/styles\";import{bindActionCreators}from\"redux\";import{connect}from\"react-redux\";import{updateFilter,closeFilterDialog}from\"../../actions\";import CloseIcon from\"@material-ui/icons/Close\";import{dialogFor,labelFor}from\"../../filterConfig\";var styles=function styles(theme){return{closeButton:{position:\"absolute\",right:theme.spacing(1),top:theme.spacing(1),color:theme.palette.grey[500]}};};var FilterDialog=function FilterDialog(_ref){var classes=_ref.classes,closeFilterDialog=_ref.closeFilterDialog,activeDialog=_ref.filterOptions.activeDialog;function handleCloseDialog(){closeFilterDialog();}var DialogContentComponent=dialogFor(activeDialog);return/*#__PURE__*/React.createElement(Dialog,{open:!!activeDialog,fullWidth:true,onClose:handleCloseDialog,\"aria-labelledby\":\"simple-dialog-title\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(DialogTitle,{id:\"simple-dialog-title\"},/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"Close\",className:classes.closeButton,onClick:handleCloseDialog},/*#__PURE__*/React.createElement(CloseIcon,null)),labelFor(activeDialog)),DialogContentComponent&&/*#__PURE__*/React.createElement(DialogContentComponent,null),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleCloseDialog,color:\"primary\"},\"Close\"))));};var mapStateToProps=function mapStateToProps(state){return{filterOptions:state.filterOptions};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateFilter:bindActionCreators(updateFilter,dispatch),closeFilterDialog:bindActionCreators(closeFilterDialog,dispatch)};};export default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(FilterDialog));","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/Filters/FilterDialog.js"],"names":["React","Dialog","DialogTitle","DialogActions","IconButton","Button","withStyles","bindActionCreators","connect","updateFilter","closeFilterDialog","CloseIcon","dialogFor","labelFor","styles","theme","closeButton","position","right","spacing","top","color","palette","grey","FilterDialog","classes","activeDialog","filterOptions","handleCloseDialog","DialogContentComponent","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OACEC,MADF,CAEEC,WAFF,CAGEC,aAHF,CAIEC,UAJF,CAKEC,MALF,KAMO,mBANP,CAQA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,kBAAT,KAAmC,OAAnC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,YAAT,CAAuBC,iBAAvB,KAAgD,eAAhD,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,oBAApC,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,WAAW,CAAE,CACXC,QAAQ,CAAE,UADC,CAEXC,KAAK,CAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFI,CAGXC,GAAG,CAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,CAHM,CAIXE,KAAK,CAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAJI,CADU,CAAL,EAApB,CASA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAIf,IAHJC,CAAAA,OAGI,MAHJA,OAGI,CAFJf,iBAEI,MAFJA,iBAEI,CADagB,YACb,MADJC,aACI,CADaD,YACb,CACJ,QAASE,CAAAA,iBAAT,EAA6B,CAC3BlB,iBAAiB,GAClB,CACD,GAAMmB,CAAAA,sBAAsB,CAAGjB,SAAS,CAACc,YAAD,CAAxC,CAEA,mBACE,oBAAC,MAAD,EACE,IAAI,CAAE,CAAC,CAACA,YADV,CAEE,SAAS,CAAE,IAFb,CAGE,OAAO,CAAEE,iBAHX,CAIE,kBAAgB,qBAJlB,eAME,qDACE,oBAAC,WAAD,EAAa,EAAE,CAAC,qBAAhB,eACE,oBAAC,UAAD,EACE,aAAW,OADb,CAEE,SAAS,CAAEH,OAAO,CAACT,WAFrB,CAGE,OAAO,CAAEY,iBAHX,eAKE,oBAAC,SAAD,MALF,CADF,CAQGf,QAAQ,CAACa,YAAD,CARX,CADF,CAWGG,sBAAsB,eAAI,oBAAC,sBAAD,MAX7B,cAYE,oBAAC,aAAD,mBACE,oBAAC,MAAD,EAAQ,OAAO,CAAED,iBAAjB,CAAoC,KAAK,CAAC,SAA1C,UADF,CAZF,CANF,CADF,CA2BD,CArCD,CAuCA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCJ,aAAa,CAAEI,KAAK,CAACJ,aADW,CAAL,EAA7B,CAIA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCxB,YAAY,CAAEF,kBAAkB,CAACE,YAAD,CAAewB,QAAf,CADM,CAEtCvB,iBAAiB,CAAEH,kBAAkB,CAACG,iBAAD,CAAoBuB,QAApB,CAFC,CAAL,EAAnC,CAKA,cAAezB,CAAAA,OAAO,CACpBsB,eADoB,CAEpBE,kBAFoB,CAAP,CAGb1B,UAAU,CAACQ,MAAD,CAAV,CAAmBU,YAAnB,CAHa,CAAf","sourcesContent":["import React from \"react\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  IconButton,\n  Button\n} from \"@material-ui/core\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { updateFilter, closeFilterDialog } from \"../../actions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { dialogFor, labelFor } from \"../../filterConfig\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst FilterDialog = ({\n  classes,\n  closeFilterDialog,\n  filterOptions: { activeDialog }\n}) => {\n  function handleCloseDialog() {\n    closeFilterDialog();\n  }\n  const DialogContentComponent = dialogFor(activeDialog);\n\n  return (\n    <Dialog\n      open={!!activeDialog}\n      fullWidth={true}\n      onClose={handleCloseDialog}\n      aria-labelledby=\"simple-dialog-title\"\n    >\n      <>\n        <DialogTitle id=\"simple-dialog-title\">\n          <IconButton\n            aria-label=\"Close\"\n            className={classes.closeButton}\n            onClick={handleCloseDialog}\n          >\n            <CloseIcon />\n          </IconButton>\n          {labelFor(activeDialog)}\n        </DialogTitle>\n        {DialogContentComponent && <DialogContentComponent />}\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </>\n    </Dialog>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filterOptions: state.filterOptions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: bindActionCreators(updateFilter, dispatch),\n  closeFilterDialog: bindActionCreators(closeFilterDialog, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(FilterDialog));\n"]},"metadata":{},"sourceType":"module"}