{"ast":null,"code":"import React from\"react\";import{Typography}from\"@material-ui/core\";import{withTheme,withStyles}from\"@material-ui/core/styles\";import{connect}from\"react-redux\";import{CircularProgressbar}from\"react-circular-progressbar\";import{makeableCocktailsSelector}from\"../../selectors\";import\"react-circular-progressbar/dist/styles.css\";var styles=function styles(theme){return{title:{fontSize:25,margin:theme.spacing(1,0)},progressBar:{padding:theme.spacing(0.5),fontFamily:\"Roboto\"}};};var CocktailGauge=function CocktailGauge(_ref){var allCocktails=_ref.allCocktails,makeableCocktails=_ref.makeableCocktails,classes=_ref.classes,theme=_ref.theme;var progressBarStyles={path:{// Path color\nstroke:theme.palette.primary.main},trail:{stroke:theme.palette.grey[50]},text:{fill:theme.palette.primary.main}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",className:classes.title,gutterBottom:true},\"Cocktail Gauge\"),/*#__PURE__*/React.createElement(Typography,{component:\"p\",paragraph:true},\"How many cocktails can you make with what's in your bar?\"),/*#__PURE__*/React.createElement(CircularProgressbar,{styles:progressBarStyles,className:classes.progressBar,value:makeableCocktails.length,maxValue:allCocktails.length,text:makeableCocktails.length||\"0\"}));};var mapStateToProps=function mapStateToProps(state){return{allCocktails:state.db.cocktails,makeableCocktails:makeableCocktailsSelector(state)};};export default connect(mapStateToProps)(withTheme(withStyles(styles)(CocktailGauge)));","map":{"version":3,"sources":["/home/students/ge47qut/public_html/v2/react-speech/src/components/Bar/CocktailGauge.js"],"names":["React","Typography","withTheme","withStyles","connect","CircularProgressbar","makeableCocktailsSelector","styles","theme","title","fontSize","margin","spacing","progressBar","padding","fontFamily","CocktailGauge","allCocktails","makeableCocktails","classes","progressBarStyles","path","stroke","palette","primary","main","trail","grey","text","fill","length","mapStateToProps","state","db","cocktails"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,mBAA3B,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,0BAAtC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,mBAAT,KAAoC,4BAApC,CACA,OAASC,yBAAT,KAA0C,iBAA1C,CACA,MAAO,4CAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,QAAQ,CAAE,EADL,CAELC,MAAM,CAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAAiB,CAAjB,CAFH,CADgB,CAKvBC,WAAW,CAAE,CACXC,OAAO,CAAEN,KAAK,CAACI,OAAN,CAAc,GAAd,CADE,CAEXG,UAAU,CAAE,QAFD,CALU,CAAL,EAApB,CAWA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyD,IAAtDC,CAAAA,YAAsD,MAAtDA,YAAsD,CAAxCC,iBAAwC,MAAxCA,iBAAwC,CAArBC,OAAqB,MAArBA,OAAqB,CAAZX,KAAY,MAAZA,KAAY,CAC7E,GAAMY,CAAAA,iBAAiB,CAAG,CACxBC,IAAI,CAAE,CACJ;AACAC,MAAM,CAAEd,KAAK,CAACe,OAAN,CAAcC,OAAd,CAAsBC,IAF1B,CADkB,CAKxBC,KAAK,CAAE,CACLJ,MAAM,CAAEd,KAAK,CAACe,OAAN,CAAcI,IAAd,CAAmB,EAAnB,CADH,CALiB,CAQxBC,IAAI,CAAE,CACJC,IAAI,CAAErB,KAAK,CAACe,OAAN,CAAcC,OAAd,CAAsBC,IADxB,CARkB,CAA1B,CAaA,mBACE,4CACE,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,CAAEN,OAAO,CAACV,KAA5C,CAAmD,YAAY,KAA/D,mBADF,cAIE,oBAAC,UAAD,EAAY,SAAS,CAAC,GAAtB,CAA0B,SAAS,KAAnC,6DAJF,cAQE,oBAAC,mBAAD,EACE,MAAM,CAAEW,iBADV,CAEE,SAAS,CAAED,OAAO,CAACN,WAFrB,CAGE,KAAK,CAAEK,iBAAiB,CAACY,MAH3B,CAIE,QAAQ,CAAEb,YAAY,CAACa,MAJzB,CAKE,IAAI,CAAEZ,iBAAiB,CAACY,MAAlB,EAA4B,GALpC,EARF,CADF,CAkBD,CAhCD,CAkCA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCf,YAAY,CAAEe,KAAK,CAACC,EAAN,CAASC,SADS,CAEhChB,iBAAiB,CAAEZ,yBAAyB,CAAC0B,KAAD,CAFZ,CAAL,EAA7B,CAKA,cAAe5B,CAAAA,OAAO,CAAC2B,eAAD,CAAP,CACb7B,SAAS,CAACC,UAAU,CAACI,MAAD,CAAV,CAAmBS,aAAnB,CAAD,CADI,CAAf","sourcesContent":["import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { withTheme, withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport { makeableCocktailsSelector } from \"../../selectors\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nconst styles = theme => ({\n  title: {\n    fontSize: 25,\n    margin: theme.spacing(1, 0)\n  },\n  progressBar: {\n    padding: theme.spacing(0.5),\n    fontFamily: \"Roboto\"\n  }\n});\n\nconst CocktailGauge = ({ allCocktails, makeableCocktails, classes, theme }) => {\n  const progressBarStyles = {\n    path: {\n      // Path color\n      stroke: theme.palette.primary.main\n    },\n    trail: {\n      stroke: theme.palette.grey[50]\n    },\n    text: {\n      fill: theme.palette.primary.main\n    }\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h3\" className={classes.title} gutterBottom>\n        Cocktail Gauge\n      </Typography>\n      <Typography component=\"p\" paragraph>\n        How many cocktails can you make with what's in your bar?\n      </Typography>\n\n      <CircularProgressbar\n        styles={progressBarStyles}\n        className={classes.progressBar}\n        value={makeableCocktails.length}\n        maxValue={allCocktails.length}\n        text={makeableCocktails.length || \"0\"}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allCocktails: state.db.cocktails,\n  makeableCocktails: makeableCocktailsSelector(state)\n});\n\nexport default connect(mapStateToProps)(\n  withTheme(withStyles(styles)(CocktailGauge))\n);\n"]},"metadata":{},"sourceType":"module"}